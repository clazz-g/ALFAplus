---
title: "Parity and AD specific neurodegeneration"
author: "Clazz"
toc: true
number-sections: true
format: 
  html:
    code-fold: true
  docx: default 
editor: visual
bibliography: references.bib
csl: elsevier-vancouver.csl
---

```{r, include = F}
library(readxl)
#install.packages("ggplot2")
library(ggplot2)
#install.packages("psych")
library(psych)
#install.packages("tidyverse")
library(tidyverse)
#install.packages("ggpubr")
library(ggpubr)
#install.packages("broom")
library(broom)
#install.packages("ggeffects")
library(ggeffects)
#install.packages("MASS")
library(MASS)
#install.packages("mice")
library(mice)
#install.packages("VIM")
library(VIM)
#install.packages("car")
library(car)
#install.packages("sjPlot")
library(sjPlot)
#install.packages("caret")
library(caret)
#install.packages("bestNormalize")
library(bestNormalize)
#install.packages("ggrain")
library(ggrain)
#install.packages("emmeans")
library(emmeans)
#install.packages("skimr")
library(skimr)
library(glmnet)
#install.packages("bullseye")
library(bullseye)
#install.packages("lavaan")
library(lavaan)
#install.packages("brms")
library(brms)
#install.packages("mgcv")
library(mgcv)
library(splines)
#install.packages("fitdistrplus")
library(fitdistrplus)
#install.packages("patchwork")
library(patchwork)
#install.packages("lme4")
library(lme4)
#install.packages("lmerTest")
library(lmerTest)
library(gtsummary)
library(broom.mixed)
library(purrr)
library(huxtable)
```

```{r setup, include=FALSE}
# Register an inline hook:
options(scipen = 1, digits = 3)

```

```{r, include=FALSE}
## Plot aesthetics


call_aesthethics <- function(text_size){
  th <- theme(   panel.grid.major = element_blank(),
                 panel.grid.minor = element_blank(),
                 panel.border = element_blank(),
                 panel.background = element_blank(),
                 axis.line = element_line(linewidth = 0.5),
                 legend.position = 'right',
                 legend.text = element_text(size= text_size, family="Helvetica"),
                 text = element_text(size= text_size, family="Helvetica"),
                 strip.text.x = element_text(size = rel(0.90)),
                 strip.text.y = element_text(size = rel(0.90)),
                 axis.title.x = element_text(vjust=-0.3),
                 plot.title = element_text(hjust = 0.5, vjust = 0),
                 axis.ticks = element_line(linewidth = 0.4),
                 axis.text.x.bottom  = element_text(size = rel(0.90), margin = unit(c(t = 2.5, r = 0, b = 0, l = 0), "mm")),
                 axis.title.y = element_text(vjust = 1),
                 axis.text.y = element_text(size = rel(0.90), margin = unit(c(t = 0, r = 2.5, b = 0, l = 0), "mm")),
                 axis.ticks.length = unit(-1.2, "mm"),
                 axis.text.x.top = element_text(size = rel(0.90), margin = unit(c(t = 0, r = 0, b = 2.5, l = 0), "mm")))
  return(th)
}


th <- call_aesthethics(15)

```

```{r}
# Lancet Guidelines
# Be up to 3500 words (4500 for randomised controlled trials) with 30 references (the word count is for the manuscript text only) • Include an abstract (semi-structured summary), with five paragraphs (Background, Methods, Findings, Interpretation, and Funding), not exceeding 300 words. Our electronic submission system will ask you to copy and paste this section at the “Submit Abstract” stage • For randomised trials, the abstract should adhere to CONSORT extensions: abstracts (see Lancet 2008; 371: 281–83) • When reporting Kaplan-Meier survival data, at each timepoint, authors must include numbers at risk, and are encouraged to include the number of censored patients. • For intervention studies, the abstract should include the primary outcome expressed as the difference between groups with a confidence interval on that difference (absolute differences are more useful than relative ones). Secondary outcomes can be included as long as they are clearly marked as secondary and all such outcomes are reported • Use the recommended international non-proprietary name (rINN) for drug names. Ensure that the dose, route, and frequency of administration of any drug you mention are correct • All accepted Articles should include a link to the full study protocol published on the authors’ institutional website (see Lancet 2009; 373: 992 and Lancet 2010; 375: 348) • We encourage researchers to enrol women and ethnic groups into clinical trials of all phases, and to plan to analyse data by sex and by race
# 
# All research papers (including systematic reviews/meta-analyses) submitted to any journal in The Lancet family must include a panel putting their research into context with previous work in the format outlined below (see Lancet 2014; 384: 2176–77, for the original rationale). This panel should not contain references. Editors will use this information at the first assessment stage and peer reviewers will be specifically asked to check the content and accuracy • The Discussion section should contain a full description and discussion of the context. Authors are also invited to either report their own, up-to-date systematic review or cite a recent systematic review of other trials, putting their trial into context of the review
```

# Abstract

# Introduction

# Methods

## Study design

The ALFA+ project is a longitudinal cohort following healthly middle aged adults. This study was led in the cty of Barcelona, Spain, at the BarcelonaBeta Brain Research Center. Visit 1 was collected between ... and ..., and Visit 2 between ... and ... Visit 3 is still undergoing. The ALFA study protocol was approved by the Independent Ethics Committee Parc de Salut Mar Barcelona (and registered at Clinicaltrials.gov, NCT01835717). For a more detailed description of the cohort see Molinuevo et al.[@molinuevo2016].

## Participants

```{r, include=FALSE}
# creating basic dataset

data<-read_delim("G:/My Drive/Data/ALFA+/ALFA_dataset_basic.csv", 
    delim = ",", escape_double = FALSE, trim_ws = TRUE)%>%
  mutate(sex=factor(sex),
         APOE_binary = factor(APOE_binary))


#adding scan dates for descriptives, horizontal 
date_mri_v1<-read_excel("G:/My Drive/Data/ALFA+/neuroimaging/bx_scandates_ALFA_PLUS_V1_20231120_20250210_135308.xlsx")%>%
  dplyr::select(subject_label, scandate)%>%
  mutate(subject_label = as.numeric(subject_label))%>%
  rename(subject = subject_label,
         scandate_v1 = scandate)

date_mri_v2<-read_excel("G:/My Drive/Data/ALFA+/neuroimaging/bx_scandates_ALFA_PLUS_V2_20230518_20250210_135351.xlsx")%>%
  dplyr::select(subject_label, scandate)%>%
  mutate(subject_label = as.numeric(subject_label))%>%
  rename(subject = subject_label,
         scandate_v2 = scandate)

date_mri_long<-full_join(date_mri_v1, date_mri_v2)%>%
  mutate(scandate_v1 = as.Date(scandate_v1, format = "%Y-%m-%d"),
         scandate_v2 = as.Date(scandate_v2, format = "%Y-%m-%d"),
         diff_mri = as.numeric(difftime(scandate_v2, scandate_v1, units = c("days")))/365.25)

#adding MRI sessions dates to the dataset
data<-left_join(data, date_mri_long)%>%
  mutate(DOB = as.Date (DOB, format = "%Y-%m-%d"),
         age_v1_mri = as.numeric(difftime(scandate_v1, DOB, units= c("days")))/365.25,
         age_v2_mri = as.numeric(difftime(scandate_v2, DOB, units= c("days")))/365.25)

data_biomarkers<-read_delim("G:/My Drive/Data/ALFA+/biomarkers/biomarkers_CSF_processed.csv", 
    delim = ",", escape_double = FALSE, trim_ws = TRUE)%>%
  filter(Visit == "V1")%>%
  dplyr::select(-Visit)

data<-left_join(data, data_biomarkers)%>%
  mutate(A = factor(A))

participants_v1_cog<-read_excel("G:/My Drive/Data/ALFA+/Cognition/PACCv1_to_v3(incomplete).xlsx")%>%
  dplyr::select(IdParticipante, Visit, Z_PACC)%>%
  rename(subject = IdParticipante)%>%
  mutate(subject = as.numeric(subject))%>%
  filter(Visit == 1)%>%
  dplyr::select(subject)%>%
  nrow()


participants_v2_cog<-read_excel("G:/My Drive/Data/ALFA+/Cognition/PACCv1_to_v3(incomplete).xlsx")%>%
  dplyr::select(IdParticipante, Visit, Z_PACC)%>%
  rename(subject = IdParticipante)%>%
  mutate(subject = as.numeric(subject))%>%
  filter(Visit == 2)%>%
  dplyr::select(subject)%>%
  nrow()
  

participants_v1_mri<-data%>%
  drop_na(scandate_v1)%>%
  nrow

participants_v2_mri<-data%>%
  drop_na(scandate_v2)%>%
  nrow

participants_v1_bio<-read_delim("G:/My Drive/Data/ALFA+/biomarkers/biomarkers_CSF_processed.csv", 
    delim = ",", escape_double = FALSE, trim_ws = TRUE)%>%
  filter(Visit == "V1")%>%
  nrow()

participants_v2_bio<-read_delim("G:/My Drive/Data/ALFA+/biomarkers/biomarkers_CSF_processed.csv", 
    delim = ",", escape_double = FALSE, trim_ws = TRUE)%>%
  filter(Visit == "V2")%>%
  nrow()
```

In brief, inclusion criteria were being cognitively normal, Spanish and/or Catalan-speaking, being aged between 45 and 74 years and agreing with the study procedures and tests. A close relative was involved in the volunteer’s functional evaluation and both of them had to grant their written informed consent. Exclusion criterias Exclusion criteria were (1) Cognitive performance falling outside the established cutoffs, (2) a Clinical Dementia Rating above 0, (3) major psychiatric disorders (according to DSM-IV-TR), (4) Severe auditory and/or visual disorder, neurodevelopmental and/or psychomotor disorder, (5) Signiﬁcant diseases that could currently interfere with cognition, (6) neurological disorders, (7) Brain injuries and (8) a suspected pattern of family autosomal dominant AD.

In addition to the above exclusion criteria, women with history of cardiovascular related gestational disease, such as preeclampsia, were excluded from our sample for analysis. Participants were recruited via advertisement campaigns in newspapers and followed-up via email/phonecalls.

Our sample includes `r nrow(data)` participants from the ALFA+ project, of which `r nrow(data[data$sex==2,])` are women. Visit 1 included MRI data from `r participants_v1_mri` participants, cognitive testing from `r participants_v1_cog` participants and CSF biomarkers from `r participants_v1_bio` participants. Visit 2 included MRI data from `r participants_v2_mri` participants, cognitive testing from `r participants_v2_cog` participants and CSF biomarkers from `r participants_v2_bio` participants.

Data imputation methods were implemented using the mice package in R (v.3.18.0).

## Procedures

### Demographics

Demographic data was collected via oral questions administered by a clinician. Sex was self reported, and participants could choose from three options: male, female, or ... Race and ethnicity was also self-reported.

Reproductive variables, such as number of biological kids, age at menopause, age at menarche and number of abortions, were self-reported at the baseline visit. In the subsequent visits, participants were also asked about hormonal replacement therapy.

Social variables such as years of education, household income, occupational attainment and civil status were also sel-reported at baseline visit.

### MRI acquisition

MRI scans were acquired on a 3.0 T scanner (GE Discovery MR750 W 3 T) using the same protocol for all participants, which included one T1- and three T2- weighted sequences. The 3D-T1w sequence was designed with an isotropic voxel size of1mm3 and a matrix size of256x256x160 (TR/TE/TI = 8.0/3.7/450 ms, NSA = 1, flip angle = 8°). Three 3D-T2w sequences, with a voxel size of1 mm× 1 mm× 3 mm, were also used: fluid attenuation inversion recovery (FLAIR: TR/TE/ TI = 11,000/90/2600 ms, flip angle = 160°), fast spin echo (FSE: TR/TE = 5000/85 ms, flip angle = 110°) and, gradient echo (GRE: TR/TE = 1300/23 ms, flip angle = 15°). All scans were visually assessed to verify their quality and to detect incidental findings by a trained neuroradiologist and have been reported elsewhere (Brugulat-Serrat et al. 2017). In this study, ten participants were excluded due to the presence of a meningioma, as well as 37 participants due to susceptibility, motion artefacts or segmentation problems, resulting in a total of 561 images available for subsequent analysis. The medial temporal lobe atrophy was assessed by Medial Temporal Atrophy scale [@scheltens1992a].

### Hippocampal segmentation

Hippocampal subfield volumes were automatically calculated by FreeSurfer 7 using whole hippocampal segmentation provided by the standard ‘recon-all’ pipeline, which renders the most standard and widely-used volumetric estimation of hippocampal volumes. The subfields were delimited as following: CA1, CA3, CA4, GC-ML-DG, molecular layer, fimbria, parasubiculum, subiculum, presubiculum, HATA, fissure, and tail. However, the fissure was removed from the analysis because of its lack of particular relevance to our topic.

![Freesurfer 7 segmentation pipeline.](ad_signatures_files/hipp%20subfield%20segmentation.png)

### Lumbar puncture

CSF was collected by lumbar puncture between 9 and 12 a.m. in polypropylene tubes. Samples were processed within 1 hour and centrifuged at 4°C for 10 minutes at 2000 g, stored in polypropylene tubes and frozen at -80°C. Core AD biomarkers (namely Ab42, Ab40, total Tau, and p tau) and other molecules of interest (such as YKL-40, neurogranin and Ab oligomers) were analyzed and determined in Prof. Kaj Blennow’s laboratory (Institute ofNeuroscience and Physiology, Department of Psychiatry and Neurochemistry, The Sahlgrenska Academy at the University of Gothenburg, Sweden).

### Cognitive measures

The Preclinical Alzheimer Cognitive Composite (PACC) was developed to detect subtle cognitive changes in individuals who may be in the pre-clinical stages of AD [@Donohue2014], and includes elements of the Memory Binding Test, the Coding subtest of WAIS-IV, and semantic fluency. After obtaining the PACC z-score, cognitive change was calculated by subtracting the follow-up visit score from the baseline cognitive score. Negative values indicate worse performance in the follow-up visit.

## Statistical analyses

### Linear regression models

Statistical analyses were carried using R v4.5.1. All linear regressions were adjusted for age at baseline, APOE-4 status, time and Aβ status when not part of the interaction. Linear regressions with hippocampal subfield volumes as outcomes were adjusted for Total Intracranial Volume (TIV). p-values were adjusted using the False Discovery Rate (FDR) method.To identify other potential confounders in our primary analyses, we used directed acyclic graph (DAG) methodology to aid with covariate selection. Using Pearl's backdoor criteria, we decided to covary for education in all our analyses given that the effet of this variable on both the exposure and outcome variable, therefore making it a cofounding variable in our analyses along with age at baseline.

```{r, include=F}
library(dagitty)
library(ggdag)

set.seed(123)

g <- dagitty("dag{  
  APOE_binary -> {A vol_Whole_hippocampus}
  age_v1 -> {kids_total CAIDE_scr_20M1 Hormones HRT_pmm vol_Whole_hippocampus A}
  kids_total -> {CAIDE_scr_20M1 Hormones}
  Hormones -> {repro_span CAIDE_scr_20M1 vol_Whole_hippocampus};
  education -> {kids_total CAIDE_scr_20M1 ingreso_hogar vol_Whole_hippocampus A};
  repro_span -> {HRT_pmm CAIDE_scr_20M1 vol_Whole_hippocampus};
  HRT_pmm -> CAIDE_scr_20M1 ;
  ingreso_hogar -> {CAIDE_scr_20M1};
  CAIDE_scr_20M1 -> {A vol_Whole_hippocampus};
  A -> vol_Whole_hippocampus
  kids_total [exposure]
  vol_Whole_hippocampus [outcome]
  Hormones [unobserved]
 }")

coords<-list(
  x=c(age_v1 = 1, APOE_binary = 1, kids_total = 3, education = 2, HRT_pmm = 3, repro_span = 3, ingreso_hogar = 3, CAIDE_scr_20M1 = 4, A= 5, vol_Whole_hippocampus = 6),
  y=c(age_v1 = 0, APOE_binary = 2, education = 1, HRT_pmm= 0, kids_total = -1, repro_span = 1, ingreso_hogar= 2, CAIDE_scr_20M1= 1, A = 1, vol_Whole_hippocampus = 1))

dag_r<-dagify(vol_Whole_hippocampus ~ kids_total + education + age_v1 + CAIDE_scr_20M1+ A + HRT_pmm + age_v1,
              CAIDE_scr_20M1 ~ repro_span + HRT_pmm + kids_total + age_v1 + education + ingreso_hogar,
              ingreso_hogar ~ education,
              A ~ age_v1 + APOE_binary + CAIDE_scr_20M1,
              kids_total ~ education + age_v1,
              labels = c(kids_total = "Parity",
                         APOE_binary = "APOE-E4 Carriership",
                         education = "Education",
                         repro_span = "Reproductive span",
                         CAIDE_scr_20M1 = "CAIDE score",
                         A = "Aβ status",
                         HRT_pmm = "HRT",
                         vol_Whole_hippocampus = "Whole hippocampal volume",
                         age_v1 = "Age at baseline",
                         ingreso_hogar = "Household income"),
              exposure = "kids_total",
              outcome = "vol_Whole_hippocampus",
              coords = coords)

dag_r_tidy<-tidy_dagitty(dag_r, layout="nicely")%>%
  node_dconnected(controlling_for = c("age_v1", "education"))
```

```{r, echo=F, warning=F}
dag_r_tidy%>%
  mutate(adjusted=str_to_title(adjusted),
         arrow=ifelse(adjusted == "Adjusted", 0.15, 0.85))%>%
  ggplot(aes(x=x, y=y, xend=xend, yend=yend, colour=adjusted, fill=adjusted, shape=adjusted))+
  geom_dag_point()+
  geom_dag_edges(aes(edge_alpha=arrow), edge_width=0.7)+
  geom_dag_label_repel(aes(label = label), colour = "white", show.legend = FALSE)+
  theme_dag() +
  theme(legend.position= "none")+
  scale_shape_manual(values = c(22, 21))
```

# Results

## Descriptive results

```{r, include = F}
data_table<-data%>%
  mutate(TIV_cm=TIV/100)%>%
  dplyr::select(age_v1, kids_total, A, APOE_binary, diff_mri, education)%>%
  mutate(A=ifelse(A==1, "Aβ+", "Aβ-"),
         APOE_binary=ifelse(APOE_binary==1, "Carrier", "Non-Carrier"))
 

desc_table<-tbl_summary(data_table,
            by = kids_total, 
            missing = "no",
            label= list(kids_total = "Number of childbirths",
                     A= "Aβ status, Count (%)",
                     APOE_binary = "APOE-E4 carrier, Count (%)",
                     age_v1 = "Age at first visit, Mean (SD)",
                     TIV_cm = "Total Intracranial Volume (cm3), Mean (SD)",
                     diff_mri = "Time between visits (years), Mean (SD)",
                     education = "Education (years), Mean (SD)"))%>%
  add_n()%>%
  add_p%>%
  modify_header(label = "**Number of childbirths**") %>% # update the column header
  bold_labels()

```

```{r, echo = F, warning=F}
desc_table
```

Table 1 shows demographics and characteristics of the ALFA+ cohort for all participants, grouped by parity. Participants with higher parity were significantly more likely to be older. No difference was seen between groups regarding Aβ status and APOE-ε4 carriership.

## Whole Hippocampal volume

```{r, include = F}
# summing some groups together: "subject"\   
  # "vol_CA1-body" CA1\   
  # "vol_CA1-head" CA1\   
  # "vol_CA3-body" CA3\   
  # "vol_CA3-head" CA3\   
  # "vol_CA4-body" CA4 "vol_CA4-head" CA4 "vol_GC-ML-DG-body" GC_ML_DG   
  # "vol_GC-ML-DG-head" GC_ML_DG "vol_HATA" HATA "vol_Hippocampal_tail" Tail   
  # "vol_Whole_hippocampal_body" Body "vol_Whole_hippocampal_head" Head   
  # "vol_Whole_hippocampus" whole "vol_fimbria" fimbria   
  # "vol_hippocampal-fissure" fissure "vol_molecular_layer_HP-body"   
  # molecular_layer "vol_molecular_layer_HP-head" molecular_layer   
  # "vol_parasubiculum" parasubiculum "vol_presubiculum-body" presubiculum   
  # "vol_presubiculum-head" presubiculum "vol_subiculum-body" subiculum   
  # "vol_subiculum-head" subiculum   

 hippo<-read_excel("G:/My Drive/Data/ALFA+/neuroimaging/bx_freesurfer7_hippoSfVolumes_ALFA_PLUS_V1_20231120_20250208_111212.xlsx")%>%
  group_by(subject, region) %>%
  summarize(bilateral_volume = sum(value), .groups = "drop")%>%
 mutate(region = case_when(region == "CA1-body"| region == "CA1-head" ~ "CA1",
            region == "CA3-body"| region == "CA3-head" ~ "CA3",
            region == "CA4-body"| region == "CA4-head" ~ "CA4",
            region == "GC-ML-DG-body" | region == "GC-ML-DG-head" ~ "GC_ML_DG",
            region == "molecular_layer_HP-body" | region == "molecular_layer_HP-head"~ "molecular_layer_HP",
            region == "presubiculum-body" | region == "presubiculum-head" ~ "presubiculum",
            region == "subiculum-body" | region == "subiculum-head" ~ "subiculum",
            .default = region))%>%
  group_by(region, subject)%>%
  summarize( bilateral_volume = sum(bilateral_volume), .groups = "drop")%>%
  pivot_wider(names_from = region, values_from = bilateral_volume, names_prefix = "vol_")%>%
  mutate(subject = as.numeric(subject),
         Visit = "V1")

hippo_data<-left_join(data, hippo)

hippo2<-read_excel("G:/My Drive/Data/ALFA+/neuroimaging/bx_freesurfer7_hippoSfVolumes_ALFA_PLUS_V2_20230518_20250208_112459.xlsx")%>%
  group_by(subject, region) %>%
  summarize(bilateral_volume = sum(value), .groups = "drop")%>%
  mutate(region = case_when(region == "CA1-body"| region == "CA1-head" ~ "CA1",
            region == "CA3-body"| region == "CA3-head" ~ "CA3",
            region == "CA4-body"| region == "CA4-head" ~ "CA4",
            region == "GC-ML-DG-body" | region == "GC-ML-DG-head" ~ "GC_ML_DG",
            region == "molecular_layer_HP-body" | region == "molecular_layer_HP-head"~ "molecular_layer_HP",
            region == "presubiculum-body" | region == "presubiculum-head" ~ "presubiculum",
            region == "subiculum-body" | region == "subiculum-head" ~ "subiculum",
            .default = region))%>%
  group_by(region, subject)%>%
  summarize( bilateral_volume = sum(bilateral_volume), .groups = "drop")%>%
  pivot_wider(names_from = region, values_from = bilateral_volume, names_prefix = "vol_")%>%
  mutate(subject = as.numeric(subject),
         Visit = "V2")

hippo_data2<-left_join(data, hippo2)
  

hippo_data_long<-bind_rows(hippo_data, hippo_data2)%>%
  mutate(Visit = factor(Visit))%>%
  mutate(age_mri = case_when(
    Visit == "V1" ~ age_v1_mri,
    Visit == "V2" ~ age_v2_mri
  ))%>%
  dplyr::select(-age_v1_mri, -age_v2_mri)%>%
  drop_na(scandate_v2)%>%
  mutate(diff_mri = ifelse(Visit == "V1", 0, diff_mri))

#fucntion to run 
run_volume_lmer_regressions <- function(data, predictors) {
  # Find all columns that start with "vol_"
  outcome_vars <- grep("^vol_", names(data), value = TRUE)

  # Create a formula string from predictors
  predictor_formula <- paste(predictors, collapse = " + ")

  # Run regressions and store summary results
  summaries <- lapply(outcome_vars, function(outcome) {
    formula <- as.formula(paste0("`", outcome, "` ~ ", predictor_formula))
    model <- lmer(formula, data = data)
    summary(model)
  })

  # Name each summary by its outcome variable
  names(summaries) <- outcome_vars

  return(summaries)
}
```

```{r, include = F}
##whole hippocampus, simple

mod_whole_simple<-lmer(vol_Whole_hippocampus ~ kids_total*diff_mri + age_v1 +APOE_binary + A + scale(TIV) + education +(1|subject), data = hippo_data_long[hippo_data_long$sex==2,])
summary(mod_whole_simple)

mod_whole_int<-lmer(vol_Whole_hippocampus ~ kids_total*diff_mri*A + age_v1 +APOE_binary + scale(TIV) + education + (1|subject), data = hippo_data_long[hippo_data_long$sex==2,])
summary(mod_whole_int)

plot_model(mod_whole_int, type= "int")

# men 

mod_whole_simple_men<-lmer(vol_Whole_hippocampus ~ kids_total*diff_mri + age_v1 +APOE_binary + A + scale(TIV) + education +(1|subject), data = hippo_data_long[hippo_data_long$sex==1,])
summary(mod_whole_simple_men)

mod_whole_int_men<-lmer(vol_Whole_hippocampus ~ kids_total*diff_mri*A + age_v1 +APOE_binary + scale(TIV) + education + (1|subject), data = hippo_data_long[hippo_data_long$sex==1,])
summary(mod_whole_int_men)


```

The two-way interaction between parity and time did not reveal any significant main effect of parity. However, when introducing a 3-way interaction with AB status, a trending parity and AB status interaction was found (β = `r tidy(mod_whole_int)$estimate[10]`, p = `r tidy(mod_whole_int)$p.value[10]`), such that Aβ- women showed a positive relationship between parity and hippocampal volume, whilst Aβ- women showed the opposite (Figure X). Stratified analyses show

When testing these interaction on the men in the cohort, no significant main effect or interaction was found after correction.

```{r, echo=F, warning=F}

preds_hip_int <- ggpredict(mod_whole_int, terms = c("diff_mri", "kids_total", "A"))

preds_hip_int_A0<-as.data.frame(preds_hip_int)%>%
  rename(kids_total_factor = group,
         A=facet)%>%
  filter(A==0)%>%
  mutate(A = ifelse(A==0, "Aβ-", "Aβ-"),
         kids_total_factor = ifelse(kids_total_factor == 4, "4+", as.character(kids_total_factor)))


preds_hip_int_A1<-as.data.frame(preds_hip_int)%>%
  rename(kids_total_factor = group,
         A=facet)%>%
  filter(A==1)%>%
  mutate(A = ifelse(A==1, "Aβ+", "Aβ+"),
         kids_total_factor = ifelse(kids_total_factor == 4, "4+", as.character(kids_total_factor)))


hippo_data_long %>%
  filter(sex == 2, !is.na(A)) %>%
  mutate(kids_total_factor = ifelse(kids_total == 4, "4+", as.character(kids_total)),
         A = factor(A, levels = c("0", "1"), labels = c("Aβ-", "Aβ+"))) %>%
  ggplot(aes(x = diff_mri, y = vol_Whole_hippocampus, color = kids_total_factor)) +
  geom_point(alpha = 0.4, size=2) +
  geom_line(data =preds_hip_int_A0, aes(x=x, 
                                y=predicted, 
                                group=kids_total_factor), size=1.3) +
  geom_line(data =preds_hip_int_A1, aes(x=x, 
                                y=predicted, 
                                group=kids_total_factor), size=1.3) +
  geom_ribbon(data =preds_hip_int_A0, aes(x=x,  
                                  ymin= conf.low, 
                                  ymax = conf.high, 
                                  group=kids_total_factor), inherit.aes = F, alpha=.07)+
  geom_ribbon(data =preds_hip_int_A1, aes(x=x,  
                                  ymin= conf.low, 
                                  ymax = conf.high, 
                                  group=kids_total_factor), inherit.aes = F, alpha=.07)+
  facet_wrap(~A) +
  scale_color_manual(values = c("0" = "#8AD9B5", "1" = "#50B88E", "2" = "#047A56", "3" = "#0A5940", "4+" = "#0F3F2D")) +
  th +
  labs(x = "Time difference (years)", 
       y = "Whole hippocampus", 
       color = "Number of childbirths")


```

### Sensitivity analyses

```{r, include=F}

mod_whole_intA0<-lmer(vol_Whole_hippocampus ~ kids_total*diff_mri + age_v1 +APOE_binary + scale(TIV) + education +(1|subject), data = hippo_data_long[hippo_data_long$sex==2&hippo_data_long$A==0,])
summary(mod_whole_intA0)

mod_whole_intA1<-lmer(vol_Whole_hippocampus ~ kids_total*diff_mri + age_v1 +APOE_binary + scale(TIV) + education +(1|subject), data = hippo_data_long[hippo_data_long$sex==2&hippo_data_long$A==1,])
summary(mod_whole_intA1)

```

Stratifying the analysis by Aβ status resulted in the main effect of parity only being significant in the Aβ- group, suggesting the prior interaction is mainly present in the context of low amyloid.

```{r, include=F}
mod_whole_int<-lmer(vol_Whole_hippocampus ~ kids_total*diff_mri*A + age_v1 +APOE_binary + education +scale(TIV) + (1|subject), data = hippo_data_long[hippo_data_long$sex==2,])
summary(mod_whole_int)

mod_whole_int_reproductive_var<-lmer(vol_Whole_hippocampus ~ kids_total*diff_mri*A + age_v1 +APOE_binary + education + scale(TIV) + repro_span  + HRT+ (1|subject), data = hippo_data_long[hippo_data_long$sex==2,])
summary(mod_whole_int_reproductive_var)

mod_whole_int_social<-lmer(vol_Whole_hippocampus ~ kids_total*diff_mri*A + age_v1 +APOE_binary + scale(TIV) + ingreso_hogar + education +(1|subject), data = hippo_data_long[hippo_data_long$sex==2,])
summary(mod_whole_int_social)
```

```{r, echo=F, warning=F}
huxreg(list("Basic" = mod_whole_int, "Reproductive var"=mod_whole_int_reproductive_var, "Social var" = mod_whole_int_social), bold_signif = 0.05, outer_borders =1, stars = c("†" = 0.1, "*" = 0.05, "**" = 0.01, "***" = 0.001))%>%
  set_caption("Whole Hippocampus") %>% 
  set_caption_pos("top")
```

## Hippocampal subfields

```{r, include = F}
##subfields

outcome_vars <- c(
  "vol_CA1", "vol_CA3", "vol_CA4", "vol_GC_ML_DG", "vol_HATA", 
  "vol_Hippocampal_tail", "vol_fimbria", "vol_molecular_layer_HP", 
  "vol_parasubiculum", "vol_presubiculum", "vol_subiculum"
)


model_names <- c(
  "CA1", "CA3", "CA4", "GC-ML-DG", "HATA", 
  "Tail", "Fimbria", "Molecular layer", 
  "Parasubiculum", "Presubiculum", "Subiculum"
)


hippo_data_long%>%
  filter(sex == 2 )%>%
  dplyr::select(-vol_Whole_hippocampal_body, -vol_Whole_hippocampal_head, -vol_Whole_hippocampus, -`vol_hippocampal-fissure`)%>%
run_volume_lmer_regressions( .,c( "kids_total*diff_mri", "A","age_v1", "APOE_binary", "education", "scale(TIV)", "(1 | subject)"))


#interaction
hippo_data_long%>%
  filter(sex == 2 )%>%
  dplyr::select(-vol_Whole_hippocampal_body, -vol_Whole_hippocampal_head, -vol_Whole_hippocampus, -`vol_hippocampal-fissure`)%>%
run_volume_lmer_regressions( .,c( "kids_total*A*diff_mri", "age_v1",  "APOE_binary", "education", "scale(TIV)", "(1 | subject)"))

models_hip_w_int <- setNames(
  lapply(outcome_vars, function(outcome) {
    formula <- as.formula(
      paste(outcome, "~ kids_total*A*diff_mri + scale(TIV) + age_v1 + APOE_binary + education + (1 | subject)")
    )
    lmer(formula, data = hippo_data_long[hippo_data_long$sex==2,])
  }),
  model_names
)


tidy_models_hip_w_int <- map_dfr(models_hip_w_int, ~ {
  broom.mixed::tidy(.x, terms = c("kids_total", "kids_total:A1", "A1"))   # Add consistent term column
}, .id = "region")%>%
  filter(term == "kids_total:A1")

fdr_hip_w_int<-tidy_models_hip_w_int%>%
  filter(term == "kids_total:A1")%>%
  pull(p.value)%>%
  p.adjust(., method = "fdr")%>%
  format(., scientific = FALSE)%>%
  as.numeric()

#men 

hippo_data_long%>%
  filter(sex == 1 )%>%
  dplyr::select(-vol_Whole_hippocampal_body, -vol_Whole_hippocampal_head, -vol_Whole_hippocampus, -`vol_hippocampal-fissure`)%>%
run_volume_lmer_regressions( .,c( "kids_total*diff_mri", "A","age_v1", "APOE_binary", "education","scale(TIV)", "(1 | subject)"))

hippo_data_long%>%
  filter(sex == 1 )%>%
  dplyr::select(-vol_Whole_hippocampal_body, -vol_Whole_hippocampal_head, -vol_Whole_hippocampus, -`vol_hippocampal-fissure`)%>%
run_volume_lmer_regressions( .,c( "kids_total*diff_mri*A","age_v1", "APOE_binary", "education","scale(TIV)", "(1 | subject)"))

models_hip_w_int_men <- setNames(
  lapply(outcome_vars, function(outcome) {
    formula <- as.formula(
      paste(outcome, "~ kids_total*A*diff_mri + scale(TIV) + age_v1 + APOE_binary + education + (1 | subject)")
    )
    lmer(formula, data = hippo_data_long[hippo_data_long$sex==1,])
  }),
  model_names
)


tidy_models_hip_w_int_men <- map_dfr(models_hip_w_int_men, ~ {
  broom.mixed::tidy(.x, terms = c("kids_total", "kids_total:A1:diff_mri", "A1"))   # Add consistent term column
}, .id = "region")%>%
  filter(term == "kids_total:A1:diff_mri")

fdr_hip_w_int_men<-tidy_models_hip_w_int_men%>%
  pull(p.value)%>%
  p.adjust(., method = "fdr")%>%
  format(., scientific = FALSE)%>%
  as.numeric()

```

Applying the two-way time and parity interaction model to each individual hippocampal subfield revealed no significant main effect of parity after applying FDR correction. However, the three way interaction including Aβ status showed a significant effect of the interaction between parity and Aβ on the parasubiculum volume (β = `r tidy_models_hip_w_int$estimate[9]`, adj.p = `r fdr_hip_w_int[9]`), and a near significant effect on the CA4 (β = `r tidy_models_hip_w_int$estimate[3]`, adj.p = `r fdr_hip_w_int[3]`), dentate gyrus (β = `r tidy_models_hip_w_int$estimate[4]`, adj.p = `r fdr_hip_w_int[4]`), presubiculum (β = `r tidy_models_hip_w_int$estimate[10]`, adj.p = `r fdr_hip_w_int[10]`) and subiculum (β = `r tidy_models_hip_w_int$estimate[11]`, adj.p = `r fdr_hip_w_int[11]`). The direction of the effect followed the same as for the whole hippocampus, where Aβ- women showed a positive relationship between parity and hippocampal volume, whilst Aβ- women showed the opposite (Figure X)

When reproducing these analyses in men, the only significant effect found was a three-way interaction between parity, time and Aβ status in the molecular layer (β = `r tidy_models_hip_w_int_men$estimate[8]`, adj.p = `r fdr_hip_w_int_men[8]`).

```{r, echo=F, warning=F}
data_forest_plot<-hippo_data_long%>%
  filter(sex == 2 )

models<-list(
  CA1 = lmer(vol_CA1 ~ kids_total*A + scale(TIV) + age_mri + APOE_binary + (1 | subject),data = data_forest_plot),
  CA3 = lmer(vol_CA3 ~ kids_total*A + scale(TIV) + age_mri + APOE_binary + (1 | subject),data = data_forest_plot),
  `CA4` = lmer(vol_CA4 ~ kids_total*A + scale(TIV) + age_mri + APOE_binary + (1 | subject),data = data_forest_plot),
  `GC-ML-DG` = lmer(vol_GC_ML_DG ~ kids_total*A + scale(TIV) + age_mri + APOE_binary + (1 | subject),data = data_forest_plot),
  HATA = lmer(vol_HATA ~ kids_total*A + scale(TIV) + age_mri + APOE_binary + (1 | subject),data = data_forest_plot),
  Tail = lmer(vol_Hippocampal_tail ~ kids_total*A + scale(TIV) + age_mri + APOE_binary + (1 | subject),data = data_forest_plot),
  Fimbria = lmer(vol_fimbria ~ kids_total*A + scale(TIV) + age_mri + APOE_binary + (1 | subject),data = data_forest_plot),
  `Molecular layer` = lmer(vol_molecular_layer_HP ~ kids_total*A + scale(TIV) + age_mri + APOE_binary + (1 | subject),data = data_forest_plot),
 `Parasubiculum` = lmer(vol_parasubiculum ~ kids_total*A + scale(TIV) + age_mri + APOE_binary + (1 | subject),data = data_forest_plot),
  `Presubiculum` = lmer(vol_presubiculum ~ kids_total*A + scale(TIV) + age_mri + APOE_binary + (1 | subject),data = data_forest_plot),
  `Subiculum` = lmer(vol_subiculum ~ kids_total*A + scale(TIV) + age_mri + APOE_binary + (1 | subject),data = data_forest_plot)
)

# Extract coefficients and CIs
#install.packages("broom.mixed")

pred_hippo_all <- map_dfr(models, ~ {
  broom.mixed::tidy(.x, terms = c("kids_total", "A1"))   # Add consistent term column
}, .id = "region")%>%
  filter(term %in% c("kids_total", "A1", "kids_total:A1"))%>%
  dplyr::select(region, term, estimate, std.error)%>%
  pivot_wider(names_from = term, values_from = c(estimate, std.error))%>%
  mutate(plot_estimate_kids_A0 = estimate_kids_total,
         plot_estimate_kids_A1 = estimate_kids_total + `estimate_kids_total:A1`,
         plot_conf.low_kids_A0 = estimate_kids_total - 1.96 * std.error_kids_total,
         plot_conf.high_kids_A0 = estimate_kids_total + 1.96 * std.error_kids_total,
         plot_conf.low_kids_A1 = (estimate_kids_total + `estimate_kids_total:A1` - 1.96 * `std.error_kids_total:A1`),
         plot_conf.high_kids_A1 = (estimate_kids_total + `estimate_kids_total:A1` + 1.96 * `std.error_kids_total:A1`))%>%
  dplyr::select(-estimate_kids_total, -estimate_A1,-`estimate_kids_total:A1` ,-`std.error_kids_total`, -std.error_A1 ,         -`std.error_kids_total:A1`)%>%
  pivot_longer(
    cols = starts_with("plot_"),  # Keep 'term' as-is
    names_to = c(".value", "A"),  # .value creates columns like estimate, conf.low, etc.
    names_pattern = "plot_(.*)_kids_A(\\d+)"
  )%>%
  mutate(colour_group = case_when(region == "CA4" ~ "trend",
                                  region == "GC-ML-DG" ~ "trend",
                                  region == "Presubiculum" ~ "trend",
                                  region == "Subiculum" ~ "trend",
                                  region == "Parasubiculum" ~ "significant",
                                  .default = "normal"))

pred_hippo_all %>%
  mutate(A = factor(A, levels = c("1", "0"), labels = c("Positive", "Negative"))) %>%
  ggplot(aes(x = estimate, y = region, group = A, shape = A, color = colour_group)) +
  geom_pointrange(aes(xmin = conf.low, xmax = conf.high), 
                  position = position_dodge(width = 0.8),
                  size = 0.6) +
  labs(x = "Estimated effect of parity", 
       y = "Hippocampal subfield", 
       shape = "Aβ status",
       color = "Significance level (FDR corrected)") +
  th +
  geom_vline(xintercept = 0, linetype = "dotted", colour = "grey3") +
  scale_shape_manual(values = c("Negative" = 15, "Positive" = 16))+
  scale_color_manual(values = c("trend" = "grey3", "significant" = "red", "normal" = "grey48"))+
  guides(colour = "none")
  
```

### Sensitivity analyses

```{r, eval=F}

mod_para_A0<-lmer(vol_parasubiculum ~ kids_total*diff_mri + age_v1 +APOE_binary + scale(TIV) + (1|subject), data = hippo_data_long[hippo_data_long$sex==2&hippo_data_long$A==0,])

mod_para_A1<-lmer(vol_parasubiculum ~ kids_total*diff_mri + age_v1 +APOE_binary + scale(TIV) + (1|subject), data = hippo_data_long[hippo_data_long$sex==2&hippo_data_long$A==1,])


#parasubiculum driven by A+ women

mod_CA4_A0<-lmer(vol_CA4 ~ kids_total*diff_mri + age_v1 +APOE_binary + scale(TIV) + (1|subject), data = hippo_data_long[hippo_data_long$sex==2&hippo_data_long$A==0,])
summary(mod_CA4_A0)
mod_CA4_A1<-lmer(vol_CA4 ~ kids_total*diff_mri + age_v1 +APOE_binary + scale(TIV) + (1|subject), data = hippo_data_long[hippo_data_long$sex==2&hippo_data_long$A==1,])
summary(mod_CA4_A1)

#CA4 driven by A- women

mod_DG_A0<-lmer(vol_GC_ML_DG ~ kids_total*diff_mri + age_v1 +APOE_binary + scale(TIV) + (1|subject), data = hippo_data_long[hippo_data_long$sex==2&hippo_data_long$A==0,])
summary(mod_DG_A0)
mod_DG_A1<-lmer(vol_GC_ML_DG ~ kids_total*diff_mri + age_v1 +APOE_binary + scale(TIV) + (1|subject), data = hippo_data_long[hippo_data_long$sex==2&hippo_data_long$A==1,])
summary(mod_DG_A1)

#DG driven by A- women

mod_subiculum_A0<-lmer(vol_subiculum ~ kids_total*diff_mri + age_v1 +APOE_binary + scale(TIV) + (1|subject), data = hippo_data_long[hippo_data_long$sex==2&hippo_data_long$A==0,])
summary(mod_subiculum_A0)
mod_subiculum_A1<-lmer(vol_subiculum ~ kids_total*diff_mri + age_v1 +APOE_binary + scale(TIV) + (1|subject), data = hippo_data_long[hippo_data_long$sex==2&hippo_data_long$A==1,])
summary(mod_CA4_A1)

#subiculum driven by A- women

mod_presubiculum_A0<-lmer(vol_presubiculum ~ kids_total*diff_mri + age_v1 +APOE_binary + scale(TIV) + (1|subject), data = hippo_data_long[hippo_data_long$sex==2&hippo_data_long$A==0,])
summary(mod_presubiculum_A0)
mod_presubiculum_A1<-lmer(vol_presubiculum ~ kids_total*diff_mri + age_v1 +APOE_binary + scale(TIV) + (1|subject), data = hippo_data_long[hippo_data_long$sex==2&hippo_data_long$A==1,])
summary(mod_presubiculum_A1)

#presubiculum driven by A- women
```

Startifying the regressions per Aβ status showed that the effect was driven by Aβ status-women in all subfields but the parasubiculum, where the effect seemed to be driven by Aβ status+ women.

```{r, echo=F, warning=F}
mod_para<-lmer(vol_parasubiculum ~ kids_total*diff_mri*A + age_v1 +APOE_binary + education +scale(TIV) + (1|subject), data = hippo_data_long[hippo_data_long$sex==2,])

mod_para_rep<-lmer(vol_parasubiculum ~ kids_total*diff_mri*A + age_v1 +APOE_binary + education +scale(TIV) + repro_span  + HRT+ (1|subject), data = hippo_data_long[hippo_data_long$sex==2,])

mod_para_soc<-lmer(vol_parasubiculum ~ kids_total*diff_mri*A + age_v1 +APOE_binary + scale(TIV) + ingreso_hogar + education +(1|subject), data = hippo_data_long[hippo_data_long$sex==2,])


mod_CA4<-lmer(vol_CA4 ~ kids_total*diff_mri*A + age_v1 +APOE_binary + education +scale(TIV) + (1|subject), data = hippo_data_long[hippo_data_long$sex==2,])

mod_CA4_rep<-lmer(vol_CA4 ~ kids_total*diff_mri*A + age_v1 +APOE_binary + education +scale(TIV) + repro_span  + HRT+ (1|subject), data = hippo_data_long[hippo_data_long$sex==2,])

mod_CA4_soc<-lmer(vol_CA4 ~ kids_total*diff_mri*A + age_v1 +APOE_binary + scale(TIV) + ingreso_hogar + education +(1|subject), data = hippo_data_long[hippo_data_long$sex==2,])


mod_DG<-lmer(vol_GC_ML_DG ~ kids_total*diff_mri*A + age_v1 +APOE_binary + education +scale(TIV) + (1|subject), data = hippo_data_long[hippo_data_long$sex==2,])

mod_DG_rep<-lmer(vol_GC_ML_DG ~ kids_total*diff_mri*A + age_v1 +APOE_binary + education +scale(TIV) + repro_span  + HRT+ (1|subject), data = hippo_data_long[hippo_data_long$sex==2,])

mod_DG_soc<-lmer(vol_GC_ML_DG ~ kids_total*diff_mri*A + age_v1 +APOE_binary + scale(TIV) + ingreso_hogar + education +(1|subject), data = hippo_data_long[hippo_data_long$sex==2,])


mod_subiculum<-lmer(vol_subiculum ~ kids_total*diff_mri*A + age_v1 +APOE_binary + education +scale(TIV) + (1|subject), data = hippo_data_long[hippo_data_long$sex==2,])

mod_subiculum_rep<-lmer(vol_subiculum ~ kids_total*diff_mri*A + age_v1 +APOE_binary + education +scale(TIV) + repro_span  + HRT+ (1|subject), data = hippo_data_long[hippo_data_long$sex==2,])

mod_subiculum_soc<-lmer(vol_subiculum ~ kids_total*diff_mri*A + age_v1 +APOE_binary + scale(TIV) + ingreso_hogar + education +(1|subject), data = hippo_data_long[hippo_data_long$sex==2,])


mod_presubiculum<-lmer(vol_presubiculum ~ kids_total*diff_mri*A + age_v1 +APOE_binary + education +scale(TIV) + (1|subject), data = hippo_data_long[hippo_data_long$sex==2,])

mod_presubiculum_rep<-lmer(vol_presubiculum ~ kids_total*diff_mri*A + age_v1 +APOE_binary + education +scale(TIV) + repro_span  + HRT+ (1|subject), data = hippo_data_long[hippo_data_long$sex==2,])

mod_presubiculum_soc<-lmer(vol_presubiculum ~ kids_total*diff_mri*A + age_v1 +APOE_binary + scale(TIV) + ingreso_hogar + education +(1|subject), data = hippo_data_long[hippo_data_long$sex==2,])

huxreg(list("Basic" = mod_CA4, "Reproductive var"=mod_CA4_rep, "Social var" = mod_CA4_soc), bold_signif = 0.05, outer_borders =1, stars = c("†" = 0.1, "*" = 0.05, "**" = 0.01, "***" = 0.001))%>%
  set_caption("CA4") %>% 
  set_caption_pos("top")
huxreg(list("Basic" = mod_DG, "Reproductive var"=mod_DG_rep, "Social var" = mod_DG_soc), bold_signif = 0.05, outer_borders =1, stars = c("†" = 0.1, "*" = 0.05, "**" = 0.01, "***" = 0.001))%>%
  set_caption("Gentate Gyrus") %>% 
  set_caption_pos("top")
huxreg(list("Basic" = mod_para, "Reproductive var"=mod_para_rep, "Social var" = mod_para_soc), bold_signif = 0.05, outer_borders =1, stars = c("†" = 0.1, "*" = 0.05, "**" = 0.01, "***" = 0.001))%>%
  set_caption("Parasubiculum") %>% 
  set_caption_pos("top")
huxreg(list("Basic" = mod_subiculum, "Reproductive var"=mod_subiculum_rep, "Social var" = mod_subiculum_soc), bold_signif = 0.05, outer_borders =1, stars = c("†" = 0.1, "*" = 0.05, "**" = 0.01, "***" = 0.001))%>%
  set_caption("Subiculum") %>% 
  set_caption_pos("top")
huxreg(list("Basic" = mod_presubiculum, "Reproductive var"=mod_presubiculum_rep, "Social var" = mod_presubiculum_soc), bold_signif = 0.05, outer_borders =1, stars = c("†" = 0.1, "*" = 0.05, "**" = 0.01, "***" = 0.001))%>%
  set_caption("Presubiculum") %>% 
  set_caption_pos("top")

```

## Cognitive trajectory

```{r, include=F}
cognition<-read_excel("G:/My Drive/Data/ALFA+/Cognition/PACCv1_to_v3(incomplete).xlsx")%>%
  dplyr::select(IdParticipante, Visit, Z_PACC, Z_FCSRTI_RT, Z_aWMS_DR_RS, Z_Wclave_totalscr, Z_FS_totalcnswr, FechaResultado)%>%
  rename(subject = IdParticipante)%>%
  mutate(subject = as.numeric(subject))

time_diff<-read_excel("G:/My Drive/Data/ALFA+/Cognition/PACCv1_to_v3(incomplete).xlsx")%>%
  dplyr::select(IdParticipante, Visit,FechaResultado)%>%
  rename(subject = IdParticipante)%>%
  mutate(subject = as.numeric(subject))%>%
  filter(Visit != 3)%>%
  pivot_wider(names_from = Visit, values_from = FechaResultado, names_prefix = c("Fecha_Resultado"))%>%
  mutate(time_diff = as.numeric(difftime(Fecha_Resultado2, Fecha_Resultado1, units= c("days"))))%>%
  dplyr::select(subject, time_diff)

data_cog_long<- left_join(data, cognition)%>%
  mutate(age_cog = as.numeric(difftime(FechaResultado, DOB, units= c("days")))/365.25)%>%
  group_by(subject)%>%
  filter(Visit != 3) %>%
  filter(n()>=2)%>%
  relocate(Visit, .after=sex)%>%
  ungroup()%>%
  left_join(., time_diff)%>%
  mutate(time_diff = ifelse(Visit == 1, 0, time_diff))

fit_cog_simple_PACC<-lmer(Z_PACC ~ kids_total*time_diff +age_v1 + APOE_binary + education + A +(1 | subject), data_cog_long[data_cog_long$sex==2,])
summary(fit_cog_simple_PACC)

fit_cog_PACC<-lmer(Z_PACC ~ kids_total*A*time_diff +age_v1 + APOE_binary + education +(1 | subject), data_cog_long[data_cog_long$sex==2,])
summary(fit_cog_PACC)

```

The two-way parity and time interaction did not produce any significan main effect on PACC score at visit 1 and 2. However, a three-way interaction between time, parity and A status was found (β = `r tidy(fit_cog_PACC)$estimate[11]`, p=`r tidy(fit_cog_PACC)$p.value[11]`). Results suggest that whilst parity and Aβ status did not seem to affect PACC score at time = 0, Aβ- women appeared to show a positive relationship between parity and PACC score as time went on, and Aβ+ women the opposite.

```{r, echo=F, warning=F}

preds_PACC <- ggpredict(fit_cog_PACC, terms = c("time_diff", "kids_total", "A"))

preds_PACC_A0<-as.data.frame(preds_PACC)%>%
  rename(kids_total_factor = group,
         A=facet)%>%
  filter(A==0)%>%
  filter(kids_total_factor!=3)%>%
  mutate(A = ifelse(A==0, "Aβ-", "Aβ-"),
         kids_total_factor = ifelse(kids_total_factor== 4, "3+", as.character(kids_total_factor)))


preds_PACC_A1<-as.data.frame(preds_PACC)%>%
  rename(kids_total_factor = group,
         A=facet)%>%
  filter(A==1)%>%
  filter(kids_total_factor!=3)%>%
  mutate(A = ifelse(A==1, "Aβ+", "Aβ+"),
         kids_total_factor = ifelse(kids_total_factor== 4, "3+", as.character(kids_total_factor)))

#by time diff with predicted values - preferred?
data_cog_long %>%
  filter(sex == 2, !is.na(A)) %>%
  mutate(kids_total_factor = ifelse(kids_total >= 3, "3+", as.character(kids_total)),
         A = factor(A, levels = c("0", "1"), labels = c("Aβ-", "Aβ+"))) %>%
  ggplot(aes(x = time_diff, y = Z_PACC, color = kids_total_factor)) +
  geom_point(alpha = 0.3, size=2) +
  geom_line(data =preds_PACC_A0, aes(x=x, 
                                y=predicted, 
                                group=kids_total_factor), size=1.3) +
  geom_line(data =preds_PACC_A1, aes(x=x, 
                                y=predicted, 
                                group=kids_total_factor), size=1.3) +
  geom_ribbon(data =preds_PACC_A0, aes(x=x,  
                                  ymin= conf.low, 
                                  ymax = conf.high, 
                                  group=kids_total_factor), inherit.aes = F, alpha=.07)+
  geom_ribbon(data =preds_PACC_A1, aes(x=x,  
                                  ymin= conf.low, 
                                  ymax = conf.high, 
                                  group=kids_total_factor), inherit.aes = F, alpha=.07)+
  facet_wrap(~A) +
  scale_color_manual(values = c("0" = "#8AD9B5", "1" = "#50B88E", "2" = "#047A56", "3+" = "#0A5940")) +
  th +
  labs(x = "Time difference (days)", 
       y = "PACC Z-score", 
       color = "Number of childbirths")
```

### Sensitivity analyses

```{r, include=F}
fit_cog_PACC_A0<-lmer(Z_PACC ~ kids_total*time_diff +age_v1 + APOE_binary + education +(1 | subject), data_cog_long[data_cog_long$sex==2 & data_cog_long$A==0,])
summary(fit_cog_PACC_A0)

fit_cog_PACC_A1<-lmer(Z_PACC ~ kids_total*time_diff +age_v1 + APOE_binary + education +(1 | subject), data_cog_long[data_cog_long$sex==2 & data_cog_long$A==1,])
summary(fit_cog_PACC_A1)

```

Stratifying the analysis by Aβ status reveals the effect seems driven by Aβ- women.

```{r, include=F}
fit_cog_PACC<-lmer(Z_PACC ~ kids_total*A*time_diff +age_v1 + APOE_binary + education +(1 | subject), data_cog_long[data_cog_long$sex==2,])
summary(fit_cog_PACC)

fit_cog_PACC_reproductive_var<-lmer(Z_PACC ~ kids_total*A*time_diff + age_v1 +APOE_binary + education +  repro_span  + HRT+ (1|subject), data = data_cog_long[data_cog_long$sex==2,])
summary(fit_cog_PACC_reproductive_var)

fit_cog_PACC_social<-lmer(Z_PACC ~ kids_total*A*time_diff + age_v1 +APOE_binary + education + ingreso_hogar + (1|subject), data = data_cog_long[data_cog_long$sex==2,])
summary(fit_cog_PACC_social)

```

```{r, echo=F, warning=F}
huxreg(list("Basic" = fit_cog_PACC, "Reproductive var"=fit_cog_PACC_reproductive_var, "Social var" = fit_cog_PACC_social), bold_signif = 0.05, outer_borders =1, stars = c("†" = 0.1, "*" = 0.05, "**" = 0.01, "***" = 0.001))%>%
  set_caption("PACC score") %>% 
  set_caption_pos("top")
```

## Post-Hoc

```{r, include=F}

diff_mri_df<-date_mri_long%>%
  dplyr::select(subject, diff_mri)

hippo_V1<-hippo%>%
  rename_with(~ paste(., "V1", sep = "_"))%>%
  rename(subject = subject_V1)

hippo_sem<-hippo2%>%
  rename_with(~ paste(., "V2", sep = "_"))%>%
  rename(subject = subject_V2)%>%
  right_join(., hippo_V1, join_by(subject))%>%
  dplyr::select(-Visit_V1, -Visit_V2)%>%
  left_join(., diff_mri_df)%>%
  mutate(rate_CA1 = (vol_CA1_V2-vol_CA1_V1)/diff_mri,
         rate_CA3 = (vol_CA3_V2-vol_CA3_V1)/diff_mri,
         rate_CA4 = (vol_CA4_V2-vol_CA4_V1)/diff_mri,
         rate_GC_ML_DG = (vol_GC_ML_DG_V2-vol_GC_ML_DG_V1)/diff_mri,
         rate_HATA = (vol_HATA_V2-vol_HATA_V1)/diff_mri,
         rate_Hippocampal_tail = (vol_Hippocampal_tail_V2-vol_Hippocampal_tail_V1)/diff_mri,
         rate_fimbria = (vol_fimbria_V2-vol_fimbria_V1)/diff_mri,
         rate_molecular_layer_HP = (vol_molecular_layer_HP_V2-vol_molecular_layer_HP_V1)/diff_mri,
         rate_parasubiculum = (vol_parasubiculum_V2-vol_parasubiculum_V1)/diff_mri,
         rate_presubiculum = (vol_presubiculum_V2-vol_presubiculum_V1)/diff_mri,
         rate_subiculum = (vol_subiculum_V2-vol_subiculum_V1)/diff_mri)
  

# need to do SEM with GFAP, sTREM, neurogranin, IL6



biomarkers_wide<-read_delim("G:/My Drive/Data/ALFA+/biomarkers/biomarkers_CSF_processed.csv", 
    delim = ",", escape_double = FALSE, trim_ws = TRUE)%>%
  mutate(subject=as.numeric(subject))%>%
  rename(CSF_A = A,
         CSF_AT = AT)%>%
  drop_na(Visit)%>%
  dplyr::select(-collection_dt)%>%
  pivot_wider(names_from = Visit, values_from = c(starts_with("CSF_")))

data_naked<-read_delim("G:/My Drive/Data/ALFA+/ALFA_dataset_basic.csv", 
    delim = ",", escape_double = FALSE, trim_ws = TRUE)%>%
  mutate(sex=factor(sex))

data_sem<-full_join(biomarkers_wide, hippo_sem, join_by(subject))%>%
  right_join(., data_naked)




#this removes v2 of some people who have neuroimaging but not biomarkers. might have to revise it

cog_sem<-data_cog_long_composites%>%
  dplyr::select(subject, Visit, c(starts_with("Z_")))%>%
  mutate(Visit = ifelse(Visit == 1, "V1", "V2"))%>%
  pivot_wider(names_from = Visit, values_from = c(starts_with("Z_")))
  
data_sem<-left_join(data_sem, cog_sem)

library(lavaan)
library(semPlot)
library(corrplot)

```

### Mediation

```{r, eval=FALSE}

library(mediation)

biomarkers_long<-read_delim("G:/My Drive/Data/ALFA+/biomarkers/biomarkers_CSF_processed.csv", 
    delim = ",", escape_double = FALSE, trim_ws = TRUE)%>%
  mutate(subject=as.numeric(subject),
         Visit = ifelse(Visit == "V1", "1", "2"))

data_med<-hippo%>%
  bind_rows(hippo2)%>%
  left_join(., data_naked, join_by(subject))%>%
  mutate(Visit= ifelse(Visit=="V1","1", "2"))%>%
  left_join(., cognition, join_by(subject, Visit))%>%
  left_join(., biomarkers_long, join_by(subject, Visit))%>%
  left_join(., diff_mri_df, join_by(subject))%>%
  drop_na(Z_PACC, vol_subiculum)

data_med_A0<-data_med%>%
  filter(Visit=="1")%>%
  filter(A==0)%>%
  dplyr::select(subject)%>%
  left_join(., data_med, join_by(subject))

data_med_A1<-data_med%>%
  filter(Visit=="1")%>%
  filter(A==1)%>%
  dplyr::select(subject)%>%
  left_join(., data_med, join_by(subject))

data_med_A0_v1 <- data_med_A0%>%
  filter(Visit == "1")

#mediation of PACC by hippo volume

med.fit_A0<-lme4::lm(vol_parasubiculum ~ kids_total*diff_mri + scale(age_v1)  + scale(TIV) + scale(education) + (1|subject), data = data_med_A0[data_med_A0$sex==2 ,])

out.fit_A0<-lme4::lmer(Z_PACC ~ vol_parasubiculum + kids_total*diff_mri + scale(age_v1)  + scale(TIV) + scale(education) + (1|subject) , data = data_med_A0[data_med_A0$sex==2 ,])

med.out_A0 <- mediate(med.fit_A0, out.fit_A0, treat = "kids_total", mediator = "vol_parasubiculum", sims = 5000)
summary(med.out_A0)

med.fit_A0<-lme4::lmer(vol_presubiculum ~ kids_total*diff_mri + scale(age_v1)  + scale(TIV) + scale(education) + (1|subject), data = data_med_A0[data_med_A0$sex==2 ,])

out.fit_A0<-lme4::lmer(Z_PACC ~ vol_presubiculum + kids_total*diff_mri + scale(age_v1)  + scale(TIV) + scale(education) + (1|subject) , data = data_med_A0[data_med_A0$sex==2 ,])

med.out_A0 <- mediate(med.fit_A0, out.fit_A0, treat = "kids_total", mediator = "vol_presubiculum", sims = 5000)
summary(med.out_A0)

med.fit_A0<-lme4::lmer(vol_subiculum ~ kids_total*diff_mri + scale(age_v1)  + scale(TIV) + scale(education) + (1|subject), data = data_med_A0[data_med_A0$sex==2 ,])

out.fit_A0<-lme4::lmer(Z_PACC ~ vol_subiculum + kids_total*diff_mri + scale(age_v1)  + scale(TIV) + scale(education) + (1|subject) , data = data_med_A0[data_med_A0$sex==2 ,])

med.out_A0 <- mediate(med.fit_A0, out.fit_A0, treat = "kids_total", mediator = "vol_subiculum", sims = 5000)
summary(med.out_A0)

med.fit_A0<-lme4::lmer(vol_CA4 ~ kids_total*diff_mri + scale(age_v1)  + scale(TIV) + scale(education) + (1|subject), data = data_med_A0[data_med_A0$sex==2 ,])

out.fit_A0<-lme4::lmer(Z_PACC ~ vol_CA4 + kids_total*diff_mri + scale(age_v1)  + scale(TIV) + scale(education) + (1|subject) , data = data_med_A0[data_med_A0$sex==2 ,])

med.out_A0 <- mediate(med.fit_A0, out.fit_A0, treat = "kids_total", mediator = "vol_CA4", sims = 5000)
summary(med.out_A0)

med.fit_A0<-lme4::lmer(vol_GC_ML_DG ~ kids_total*diff_mri + scale(age_v1)  + scale(TIV) + scale(education) + (1|subject), data = data_med_A0[data_med_A0$sex==2 ,])

out.fit_A0<-lme4::lmer(Z_PACC ~ vol_GC_ML_DG + kids_total*diff_mri + scale(age_v1)  + scale(TIV) + scale(education) + (1|subject) , data = data_med_A0[data_med_A0$sex==2 ,])

med.out_A0 <- mediate(med.fit_A0, out.fit_A0, treat = "kids_total", mediator = "vol_GC_ML_DG", sims = 5000)
summary(med.out_A0)

med.fit_A0<-lme4::lmer(vol_Whole_hippocampus ~ kids_total*diff_mri + scale(age_v1)  + scale(TIV) + scale(education) + (1|subject), data = data_med_A0[data_med_A0$sex==2 ,])

out.fit_A0<-lme4::lmer(Z_PACC ~ vol_Whole_hippocampus + kids_total*diff_mri + scale(age_v1)  + scale(TIV) + scale(education) + (1|subject) , data = data_med_A0[data_med_A0$sex==2 ,])

med.out_A0 <- mediate(med.fit_A0, out.fit_A0, treat = "kids_total", mediator = "vol_Whole_hippocampus", sims = 5000)
summary(med.out_A0)


#mediation of hippo volume by biomarkers

med.fit_A0<-lm(CSF_Neurogranin ~ kids_total + scale(age_v1)  + scale(TIV) + scale(education), data = data_med_A0_v1[data_med_A0_v1$sex==2 ,])

out.fit_A0<-lm(vol_Whole_hippocampus ~ CSF_Neurogranin + kids_total + scale(age_v1)  + scale(TIV) + scale(education) , data = data_med_A0_v1[data_med_A0_v1$sex==2 ,])

med.out_A0 <- mediate(med.fit_A0, out.fit_A0, treat = "kids_total", mediator = "CSF_Neurogranin", sims = 5000)
summary(med.out_A0)


med.fit_A0<-lm(`CSF_a-Synuclein` ~ kids_total + scale(age_v1)  + scale(TIV) + scale(education), data = data_med_A0_v1[data_med_A0_v1$sex==2 ,])

out.fit_A0<-lm(vol_Whole_hippocampus ~ `CSF_a-Synuclein` + kids_total + scale(age_v1)  + scale(TIV) + scale(education) , data = data_med_A0_v1[data_med_A0_v1$sex==2 ,])

med.out_A0 <- mediate(med.fit_A0, out.fit_A0, treat = "kids_total", mediator = "CSF_a-Synuclein", sims = 5000)
summary(med.out_A0)


med.fit_A0<-lm(CSF_NFL ~ kids_total + scale(age_v1)  + scale(TIV) + scale(education), data = data_med_A0_v1[data_med_A0_v1$sex==2 ,])

out.fit_A0<-lm(vol_Whole_hippocampus ~ CSF_NFL + kids_total + scale(age_v1)  + scale(TIV) + scale(education) , data = data_med_A0_v1[data_med_A0_v1$sex==2 ,])

med.out_A0 <- mediate(med.fit_A0, out.fit_A0, treat = "kids_total", mediator = "CSF_NFL", sims = 5000)
summary(med.out_A0)


med.fit_A0<-lm(CSF_sTREM2 ~ kids_total + scale(age_v1)  + scale(TIV) + scale(education), data = data_med_A0_v1[data_med_A0_v1$sex==2 ,])

out.fit_A0<-lm(vol_Whole_hippocampus ~ CSF_sTREM2 + kids_total + scale(age_v1)  + scale(TIV) + scale(education) , data = data_med_A0_v1[data_med_A0_v1$sex==2 ,])

med.out_A0 <- mediate(med.fit_A0, out.fit_A0, treat = "kids_total", mediator = "CSF_sTREM2", sims = 5000)
summary(med.out_A0)



med.fit_A0<-lm(CSF_sVCAM1 ~ kids_total + scale(age_v1)  + scale(TIV) + scale(education), data = data_med_A0_v1[data_med_A0_v1$sex==2 ,])

out.fit_A0<-lm(vol_Whole_hippocampus ~ CSF_sVCAM1 + kids_total + scale(age_v1)  + scale(TIV) + scale(education) , data = data_med_A0_v1[data_med_A0_v1$sex==2 ,])

med.out_A0 <- mediate(med.fit_A0, out.fit_A0, treat = "kids_total", mediator = "CSF_sVCAM1", sims = 5000)
summary(med.out_A0)



med.fit_A0<-lm(CSF_Synaptotagmin ~ kids_total + scale(age_v1)  + scale(TIV) + scale(education), data = data_med_A0_v1[data_med_A0_v1$sex==2 ,])

out.fit_A0<-lm(vol_Whole_hippocampus ~ CSF_Synaptotagmin + kids_total + scale(age_v1)  + scale(TIV) + scale(education) , data = data_med_A0_v1[data_med_A0_v1$sex==2 ,])

med.out_A0 <- mediate(med.fit_A0, out.fit_A0, treat = "kids_total", mediator = "CSF_Synaptotagmin", sims = 5000)
summary(med.out_A0)


med.fit_A0<-lm(`CSF_IL-6` ~ kids_total + scale(age_v1)  + scale(TIV) + scale(education), data = data_med_A0_v1[data_med_A0_v1$sex==2 ,])

out.fit_A0<-lm(vol_Whole_hippocampus ~ `CSF_IL-6` + kids_total + scale(age_v1)  + scale(TIV) + scale(education) , data = data_med_A0_v1[data_med_A0_v1$sex==2 ,])

med.out_A0 <- mediate(med.fit_A0, out.fit_A0, treat = "kids_total", mediator = "CSF_IL-6", sims = 5000)
summary(med.out_A0)


med.fit_A0<-lm(CSF_YKL40 ~ kids_total + scale(age_v1)  + scale(TIV) + scale(education), data = data_med_A0_v1[data_med_A0_v1$sex==2 ,])

out.fit_A0<-lm(vol_Whole_hippocampus ~ CSF_YKL40 + kids_total + scale(age_v1)  + scale(TIV) + scale(education) , data = data_med_A0_v1[data_med_A0_v1$sex==2 ,])

med.out_A0 <- mediate(med.fit_A0, out.fit_A0, treat = "kids_total", mediator = "CSF_YKL40", sims = 5000)
summary(med.out_A0)

#mediation of hippo volume by social factors

med.fit_A0<-lm(ingreso_hogar ~ kids_total + scale(age_v1)  + scale(TIV) + scale(education), data = data_med_A0_v1[data_med_A0_v1$sex==2 ,])

out.fit_A0<-lm(vol_Whole_hippocampus ~ ingreso_hogar + kids_total + scale(age_v1)  + scale(TIV) + scale(education) , data = data_med_A0_v1[data_med_A0_v1$sex==2 ,])

med.out_A0 <- mediate(med.fit_A0, out.fit_A0, treat = "kids_total", mediator = "ingreso_hogar", sims = 5000)
summary(med.out_A0)

med.fit_A0<-lm(education ~ kids_total + scale(age_v1)  + scale(TIV) , data = data_med_A0_v1[data_med_A0_v1$sex==2 ,])

out.fit_A0<-lm(vol_Whole_hippocampus ~ education + kids_total + scale(age_v1)  + scale(TIV) , data = data_med_A0_v1[data_med_A0_v1$sex==2 ,])

med.out_A0 <- mediate(med.fit_A0, out.fit_A0, treat = "kids_total", mediator = "education", sims = 5000)
summary(med.out_A0)

#mediation of hippo volume by CVR

med.fit_A0<-lm(CAIDE_scr_20M1 ~ kids_total + scale(age_v1)  + scale(TIV) + scale(education), data = data_med_A0_v1[data_med_A0_v1$sex==2 ,])

out.fit_A0<-lm(vol_Whole_hippocampus ~ CAIDE_scr_20M1 + kids_total + scale(age_v1)  + scale(TIV) + scale(education) , data = data_med_A0_v1[data_med_A0_v1$sex==2 ,])

med.out_A0 <- mediate(med.fit_A0, out.fit_A0, treat = "kids_total", mediator = "CAIDE_scr_20M1", sims = 5000)
summary(med.out_A0)

# mediation effect by repro factors

med.fit_A0<-lm(repro_span ~ kids_total + scale(age_v1)  + scale(TIV) + scale(education), data = data_med_A0_v1[data_med_A0_v1$sex==2 ,])

out.fit_A0<-lm(vol_Whole_hippocampus ~ repro_span + kids_total + scale(age_v1)  + scale(TIV) + scale(education) , data = data_med_A0_v1[data_med_A0_v1$sex==2 ,])

med.out_A0 <- mediate(med.fit_A0, out.fit_A0, treat = "kids_total", mediator = "repro_span", sims = 5000)
summary(med.out_A0)

med.fit_A0<-glm(HRT_pmm ~ kids_total + scale(age_v1)  + scale(TIV) + scale(education), data = data_med_A0_v1[data_med_A0_v1$sex==2 ,], family = binomial)

out.fit_A0<-lm(vol_Whole_hippocampus ~ HRT_pmm + kids_total + scale(age_v1)  + scale(TIV) + scale(education) , data = data_med_A0_v1[data_med_A0_v1$sex==2 ,])

med.out_A0 <- mediate(med.fit_A0, out.fit_A0, treat = "kids_total", mediator = "HRT_pmm", sims = 5000)
summary(med.out_A0)

med.fit_A0<-lm(age_menopause ~ kids_total + scale(age_v1)  + scale(TIV) + scale(education), data = data_med_A0_v1[data_med_A0_v1$sex==2 ,])

out.fit_A0<-lm(vol_Whole_hippocampus ~ age_menopause + kids_total + scale(age_v1)  + scale(TIV) + scale(education) , data = data_med_A0_v1[data_med_A0_v1$sex==2 ,])

med.out_A0 <- mediate(med.fit_A0, out.fit_A0, treat = "kids_total", mediator = "age_menopause", sims = 5000)
summary(med.out_A0)

med.fit_A0<-glm(APOE_binary ~ kids_total + scale(age_v1)  + scale(TIV) + scale(education), data = data_med_A0_v1[data_med_A0_v1$sex==2 ,], family = binomial)

out.fit_A0<-lm(vol_Whole_hippocampus ~ APOE_binary + kids_total + scale(age_v1)  + scale(TIV) + scale(education) , data = data_med_A0_v1[data_med_A0_v1$sex==2 ,])

med.out_A0 <- mediate(med.fit_A0, out.fit_A0, treat = "kids_total", mediator = "APOE_binary", sims = 5000)
summary(med.out_A0)

```

Mediation analyses were done post-hoc using the mediation R package \[v.4.5.1\] to (1) investigate potential mechanisms of the ways through which parity could interact with amyloid load to affect hippocampal volume and (2) see if the effect of the parity and amyloid interaction on PACC score decline was mediated by the hippocampal volume loss.

Given the association between parity and amyloid status was only significant in AB- women, we stratified our sample by amyloid positivity to reduce the complexity of our mediation model. We tested potential mediation roles of CSF biomarkers associated with inflammation \[SNAP-25, GAP-43, Neurogranin\] and cardiovascular health \[VCAM1\], proxy measures of sex hormones \[HRT use, reproductive span\] and social variables \[household income, occupation type\], on hippocampal volume then subfield volume. Our analyses did not reveal any significant mediation effect.

Similarly, we verified if whole hippocampal volume or its subfields mediated the effect we observed of the 3-way interaction between parity, time and amyloid load on PACC decline. Our analysis did not yield any significant mediation effect either.

### bayesian model

```{r, eval=F, include=F}
#this could be an interesting approach but I need to fine tune my NA imputation and to figure out the kind of algorithm to use with my factor variables


library(bnlearn)

data_bn_v1<-data_sem%>%
  filter(sex==2)%>%
  dplyr::select(kids_total, HRT_pmm, age_v1, repro_span, CSF_Neurogranin_V1, CSF_GFAP_V1, CAIDE_scr_20M1, `CSF_IL-6_V1`, vol_Whole_hippocampus_V1 , CSF_A_V1, CSF_sTREM2_V1, ingreso_hogar, education, APOE_binary)%>%
  rename(CSF_IL_6_V1= `CSF_IL-6_V1`)%>%
  na.omit()%>%
  mutate(HRT_pmm = as.factor(HRT_pmm),
         CSF_A_V1 = as.factor(CSF_A_V1),
         ingreso_hogar = as.factor(ingreso_hogar),
         APOE_binary = as.factor(APOE_binary))



data_bn_all<-data_sem%>%
  filter(sex==2)%>%
  dplyr::select(kids_total, HRT_pmm, age_v1, repro_span, CSF_Neurogranin_V1, CSF_Neurogranin_V2, CSF_GFAP_V1, CSF_GFAP_V2, CAIDE_scr_20M1, `CSF_IL-6_V1`, `CSF_IL-6_V2`, vol_Whole_hippocampus_V1 , vol_Whole_hippocampus_V2, CSF_A_V1, CSF_A_V2, CSF_sTREM2_V1, CSF_sTREM2_V2, ingreso_hogar, education, APOE_binary)%>%
  rename(CSF_IL_6_V1= `CSF_IL-6_V1`,
         CSF_IL_6_V2= `CSF_IL-6_V2`)%>%
  na.omit()%>%
  mutate(HRT_pmm = as.factor(HRT_pmm),
         CSF_A_V1 = as.factor(CSF_A_V1),
         CSF_A_V2 = as.factor(CSF_A_V2),
         ingreso_hogar = as.factor(ingreso_hogar),
         APOE_binary = as.factor(APOE_binary))

#code is from https://www.bnlearn.com/examples/useR19-tutorial/


#blacklist

bl = tiers2blacklist(list("HRT_pmm", "age_v1", "repro_span", "education", "APOE_binary",
       c("CSF_Neurogranin_V1", "CSF_GFAP_V1", "CAIDE_scr_20M1", "CSF_IL_6_V1", "CSF_A_V1",  "CSF_sTREM2_V1", "ingreso_hogar", "vol_Whole_hippocampus_V1")))
bl = rbind(bl, c("kids_total", "repro_span"), c("repro_span", "kids_total"))
bl = rbind(bl, c("kids_total", "age_v1"), c("age_v1", "kids_total"))


#whitelist
wl = matrix(c("APOE_binary", "CSF_A_V1",
              "education", "vol_Whole_hippocampus_V1",
             "education", "kids_total"),
        ncol = 2, byrow = TRUE, dimnames = list(NULL, c("from", "to")))

dag = hc(data_bn_v1, blacklist = bl, whitelist = wl)
dag

graphviz.plot(dag, shape = "ellipse")


str.diff = boot.strength(data_bn_v1, R = 200, algorithm = "hc", algorithm.args = list(whitelist = wl, blacklist = bl))

attr(str.diff, "threshold")
avg.diff = averaged.network(str.diff)
strength.plot(avg.diff, str.diff, shape = "ellipse", highlight = list(arcs = wl))

par(mfrow = c(1, 2))
graphviz.compare(avg.diff, dag, shape = "ellipse", main = c("averaged DAG", "single DAG"))

plot(str.diff)
abline(v = 0.75, col = "tomato", lty = 2, lwd = 2)
abline(v = 0.85, col = "steelblue", lty = 2, lwd = 2)

nrow(str.diff[str.diff$strength > 0.85 & str.diff$direction > 0.5, ])

avg.simpler = averaged.network(str.diff, threshold = 0.85)
strength.plot(avg.simpler, str.diff, shape = "ellipse", highlight = list(arcs = wl))

fitted.simpler = bn.fit(avg.simpler, clgaussian.test)
fitted.simpler

##other method


```

```{r, eval=F, include=F}
#longitudinal attempt

const = "kids_total"
t1.variables = grep("V1$", names(data_bn_all), value = TRUE)
t1.variables
t2.variables = grep("V2$", names(data_bn_all), value = TRUE)
t2.variables

#creating blacklist to stop V2 from influencing V1 and V1 from influencing V1
#We blacklist all the arcs going into all the variables at time t1, because we assume that the arcs between the variables at time t1 are the same as the corresponding variables in time t2 and it's pointless to learn them twice.

roots = expand.grid(from = setdiff(names(data_bn_all), c("HRT_pmm", "age_v1", "repro_span", "education")), to = c("HRT_pmm", "age_v1", "repro_span", "education"), stringsAsFactors = FALSE)

empty.t1 = expand.grid(from = c(t1.variables), to = c(t1.variables),
              stringsAsFactors = FALSE)
bl = rbind(tiers2blacklist(list(t1.variables, t2.variables)), roots, empty.t1)

bl= rbind(bl, c("APOE_binary", "CSF_A_V1"))

wl = matrix(c("APOE_binary", "CSF_A_V2",
             "education", "kids_total"),
        ncol = 2, byrow = TRUE, dimnames = list(NULL, c("from", "to")))

dyn.dag = tabu(data_bn_all, blacklist = bl, whitelist = wl)
dyn.dag


gR = graphviz.plot(dyn.dag, shape = "rectangle", render = FALSE)
sg0 = list(graph = subGraph(const, gR), cluster = TRUE)
sg1 = list(graph = subGraph(t1.variables, gR), cluster = TRUE)
sg2 = list(graph = subGraph(t2.variables, gR), cluster = TRUE)
gR = layoutGraph(gR, subGList = list(sg0, sg1, sg2),
        attrs = list(graph = list(rankdir = "LR")))
nodeRenderInfo(gR)$fill[t1.variables] = "tomato"
nodeRenderInfo(gR)$fill[t2.variables] = "gold"
nodeRenderInfo(gR)$fontsize = 35
renderGraph(gR)

dyn.str = boot.strength(data_bn_all, R = 1000, algorithm = "tabu",
            algorithm.args = list(blacklist = bl, whitelist = wl))
plot(dyn.str)
dyn.avg = averaged.network(dyn.str)
par(mfrow = c(1, 2))
graphviz.compare(dyn.dag, dyn.avg, shape = "rectangle")


```

# Discussion

We aimed to investigate the impact of parity on hippocampal subfield volumes and relation to AD pathology in post-menopausal women at risk of AD and men who share similar age and AD risk. Our results suggest that...

Parity interacts with amyloid pathology to influence neurodegeneration and cognition. In our sample, parity was not associated with hippocampal volume size directly but appeared to moderate the effet of amyloid accumulation on hippocampal volume. In the context of low amyloid, female participants appeared to exhibit greater volumes especially in the subiculum and dentate gyrus area.

Interestingly, introducing variables that serve as proxy for hormonal exposure, such as HRT use and reproductive span, seemed to explain some of this effet in the dentate gyrus area but not in the subiculum.

Similarly, parity does not impact PACC score independently but appears to moderate the impact of amyloid pathology on cognitive trajectory. In the context of low amyloid, female participants with higher parity showed lesser cognitive decline. However, this effect was very small, especially compared with the effect of other variables, like education. Whilst including covariates related to sex steroid exposure did not modify this relationship, including household income did.

Mediation analyses trying to identify a possible mechanism behind the parity and amyloid accumulation did not yield any suitable candidates.

The biggest limitation of this study is the lack of hormonal measurements. By only using proxy measurements, we are only able to estimate the role of sex steroid hormones in the results found, but cannot make any definitive conclusions. It is very possible the role of sex hormones in our observatioins was underestimated due to this missing variable. In addition to this, the ALFA+ cohort is very homogeneous: participants are majoritarily caucasian whites, from middle and upper-middle class background, who were selected due to their impeccable health records. Therefore, we must use cuation when generalising our results to a wider population. Additionally, our sample lacked highly multiparous individuals. Previous studies on the effect of parity on cognition and neurodegeneration have found an inverted u-shaped relation between parity and outcome measures, indicating that our lack of women having had more than 4 children might be leading to an incomplete picture of the phenomenon.

# Miscellaneous

```{r, eval=F}

cent<-read_excel("G:/My Drive/Data/ALFA+/neuroimaging/bx_ftm_centiloids_ALFA_PET_FTM_20210421_20250703_170207.xlsx")%>%
  dplyr::select(-ID)%>%
  mutate(Visit = 1)
cent2<-read_excel("G:/My Drive/Data/ALFA+/neuroimaging/bx_ftm_centiloids_ALFA_PLUS_V2_PET_20250703_170258.xlsx")%>%
  dplyr::select(-ID)%>%
  mutate(Visit = 2)

data_cent<-cent%>%
  bind_rows(cent2)%>%
  mutate(subject=as.numeric(subject))%>%
  right_join(., data)

test<-lmer(centiloids ~ kids_total*diff_mri + age_v1  + APOE_binary +(1|subject), data = data_cent[data_cent$sex== 2, ])
summary(test)

```

### PCA

```{r, eval=F}
library( lavaan )

data_dag_v1<-hippo_data_long%>%
  filter(Visit == "V1")%>%
  filter(sex==2)%>%
  mutate(APOE_binary= as.integer(APOE_binary),
         A=as.integer(A))%>%
  dplyr::select(subject, kids_total, repro_span, education, HRT_pmm, hypertension, high_chol, diabetes, vol_Whole_hippocampus, ingreso_hogar, A, CAIDE_scr_20M1)

adjustmentSets(
  g,
  type="minimal",
  effect="total",
  max.results = Inf
)

corr <- lavCor( data_dag_v1 )
localTests( g, sample.cov=corr, sample.nobs=nrow( data_dag_v1 ) )
plotLocalTestResults( localTests( g, sample.cov=corr, sample.nobs=nrow( data_dag_v1 ) ) )


```

```{r, include=F, eval=F}
data_reproductive<-data%>%
  filter(sex==2)%>%
  dplyr::select(kids_total, HRT, age_menopause_pmm, age_menarche, abortions, repro_span)%>%
  na.omit()
pca_result <- prcomp(data_reproductive, scale = TRUE)
summary(pca_result)
plot(pca_result, type = "l", main = "Scree Plot")

# Extract loadings
loadings <- data.frame(pca_result$rotation)
loadings$Variable <- rownames(loadings)

# Plot loadings for PC1 and PC2
ggplot(loadings, aes(x = PC1, y = PC2)) +
  geom_point() +
  geom_text(aes(label = Variable), hjust = 0, vjust = 0) +
  geom_hline(yintercept = 0, linetype = "dashed") +
  geom_vline(xintercept = 0, linetype = "dashed") +
  labs(title = "PCA Loadings Plot")

library(factoextra)

# Scree plot
fviz_eig(pca_result, addlabels = TRUE)

# Biplot
fviz_pca_biplot(pca_result, repel = TRUE)

# Variables plot
fviz_pca_var(pca_result, col.var = "contrib", 
             gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"))

# Individuals plot
fviz_pca_ind(pca_result, col.ind = "cos2", 
             gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"))

#PCA for latent avariable does not seem to be a good choice, not enough varaince explained with one of two dimensions

```

```{r, eval= FALSE}

#hipp subfields

hippo_data_long%>%
  dplyr::select(-vol_Whole_hippocampal_body, -vol_Whole_hippocampal_head, -vol_Whole_hippocampus, -`vol_hippocampal-fissure`)%>%
run_volume_lmer_regressions( .,c( "kids_total" ,"A","sex", "age_mri", "APOE_binary", "scale(TIV)", "(1 | subject)"))


models_hip <- setNames(
  lapply(outcome_vars, function(outcome) {
    formula <- as.formula(
      paste(outcome, "~ kids_total + sex +A + scale(TIV) + age_mri + APOE_binary + (1 | subject)")
    )
    lmer(formula, data = hippo_data_long)
  }),
  model_names
)

tidy_models_hip <- map_dfr(models_hip, ~ {
  broom.mixed::tidy(.x, terms = c("kids_total", "sex2"))   # Add consistent term column
}, .id = "region")%>%
  filter(term == "sex2"| term == "kids_total")

fdr_hip_sex<-tidy_models_hip%>%
  filter(term == "sex2")%>%
  pull(p.value)%>%
  p.adjust(method = "fdr")%>%
  format(., scientific = FALSE)%>%
  as.numeric()

fdr_hip_parity<-tidy_models_hip%>%
  filter(term == "kids_total")%>%
  pull(p.value)%>%
  p.adjust(method = "fdr")%>%
  format(., scientific = FALSE)%>%
  as.numeric()


```

## Jack's signature

```{r, eval = F}
jack<-read_excel("G:/My Drive/Data/ALFA+/Jack signature ALFA+/bx_signature_jack_ALFA_PLUS_V1_20231120_20250527_142751.xlsx")%>%
  filter(weighted == "TRUE")%>%
  dplyr::select(-ID, -signature, -weighted)%>%
  pivot_wider(names_from = measurement, values_from = value, names_prefix = "jack_")%>%
  mutate(subject = as.numeric(subject),
         Visit = "V1")

jack2<-read_excel("G:/My Drive/Data/ALFA+/Jack signature ALFA+/bx_signature_jack_ALFA_PLUS_V2_20230518_20250210_114442.xlsx")%>%
  filter(weighted == "TRUE")%>%
  dplyr::select(-ID, -signature, -weighted)%>%
  pivot_wider(names_from = measurement, values_from = value, names_prefix = "jack_")%>%
  mutate(subject = as.numeric(subject),
         Visit = "V2")

jack_data<-bind_rows(jack, jack2)

jack_data_long<-left_join(hippo_data_long, jack_data)
  
#all pts
fit_jack_cort <- lmer(jack_ThickAvg ~ kids_total*A + sex +Visit +age_mri + APOE_binary + scale(TIV) + (1 | subject) , jack_data_long) 
summary(fit_jack_cort)

fit_jack_grey <- lmer(jack_GrayVol ~ kids_total*A + sex +Visit +age_mri + APOE_binary + scale(TIV) + (1 | subject) , jack_data_long) 
summary(fit_jack_grey)

#women
fit_jack_cort_w <- lmer(jack_ThickAvg ~ kids_total*A  +Visit +age_mri + APOE_binary + scale(TIV) + (1 | subject) , jack_data_long[jack_data_long$sex==2,]) 
summary(fit_jack_cort_w)

fit_jack_grey_w <- lmer(jack_GrayVol ~ kids_total*A  +Visit +age_mri + APOE_binary + scale(TIV) + (1 | subject) , jack_data_long[jack_data_long$sex==2,]) 
summary(fit_jack_grey_w)
```

## Parasubiculum volume at visit 1 and 2 in women, grouped by number of childbirths and Aβ status.

```{r, eval=F}
mod_plot<-lmer(vol_parasubiculum ~ kids_total*A + Visit + as.factor(APOE_binary) + scale(TIV) +(1| subject), data=hippo_data_long[hippo_data_long$sex==2,] )
summary(mod_plot)

preds <- ggpredict(mod_plot, terms = c("kids_total", "A", "Visit"))
```

```{r, eval=F}
hippo_data_long %>%
  filter(sex == 2) %>%
  drop_na(A) %>%
  mutate(kids_total_factor=ifelse(kids_total>=3, "3+", kids_total))%>%
  mutate(A = factor(A, labels = c("Aβ-", "Aβ+"))) %>%
  ggplot(aes(x = Visit, y = vol_parasubiculum, color = kids_total_factor, fill=kids_total_factor)) +
  geom_point(alpha = 0.6, 
             position = position_dodge(width = 1)) +
  geom_boxplot(position = position_dodge(width = 0.9), 
               alpha=.5)+
  facet_wrap(~A) +
  th +
  labs(x = "Visit", 
       y = "Parasubiculum volume", 
       color = "Number of childbirths", 
       fill= "Number of childbirths")+
  scale_color_manual(values = c("0" = "lightblue", "1" = "steelblue", "2" = "darkblue", "3+" = "navy", "4" = "midnightblue")) +
  scale_fill_manual(values = c("0" = "lightblue", "1" = "steelblue", "2" = "darkblue", "3+" = "navy", "4" = "midnightblue"))+
  scale_x_discrete(expand = expansion(mult = c(0.8, 0.8)))

ggsave("G:/My Drive/ADPD 2026/plot_parasubiculum_interaction.png", width = 9, height = 5)
```
