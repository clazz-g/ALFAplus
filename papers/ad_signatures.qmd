---
title: "Parity and AD specific neurodegeneration"
author: "Clazz"
toc: true
number-sections: true
format: 
  html:
    code-fold: true
  docx: default 
editor: visual
bibliography: references.bib
csl: elsevier-vancouver.csl
---

```{r, include = F}
library(readxl)
#install.packages("ggplot2")
library(ggplot2)
#install.packages("psych")
library(psych)
#install.packages("tidyverse")
library(tidyverse)
#install.packages("ggpubr")
library(ggpubr)
#install.packages("broom")
library(broom)
#install.packages("ggeffects")
library(ggeffects)
#install.packages("MASS")
library(MASS)
#install.packages("mice")
library(mice)
#install.packages("VIM")
library(VIM)
#install.packages("car")
library(car)
#install.packages("sjPlot")
library(sjPlot)
#install.packages("caret")
library(caret)
#install.packages("bestNormalize")
library(bestNormalize)
#install.packages("ggrain")
library(ggrain)
#install.packages("emmeans")
library(emmeans)
#install.packages("skimr")
library(skimr)
library(glmnet)
#install.packages("bullseye")
library(bullseye)
#install.packages("lavaan")
library(lavaan)
#install.packages("brms")
library(brms)
#install.packages("mgcv")
library(mgcv)
library(splines)
#install.packages("fitdistrplus")
library(fitdistrplus)
#install.packages("patchwork")
library(patchwork)
#install.packages("lme4")
library(lme4)
#install.packages("lmerTest")
library(lmerTest)
library(gtsummary)
library(broom.mixed)
library(purrr)
```

```{r setup, include=FALSE}
# Register an inline hook:
options(scipen = 1, digits = 3)

```




Lancet Guidelines

Be up to 3500 words (4500 for randomised controlled trials) with 30 references (the word count is for the manuscript text only) • Include an abstract (semi-structured summary), with five paragraphs (Background, Methods, Findings, Interpretation, and Funding), not exceeding 300 words. Our electronic submission system will ask you to copy and paste this section at the “Submit Abstract” stage • For randomised trials, the abstract should adhere to CONSORT extensions: abstracts (see Lancet 2008; 371: 281–83) • When reporting Kaplan-Meier survival data, at each timepoint, authors must include numbers at risk, and are encouraged to include the number of censored patients. • For intervention studies, the abstract should include the primary outcome expressed as the difference between groups with a confidence interval on that difference (absolute differences are more useful than relative ones). Secondary outcomes can be included as long as they are clearly marked as secondary and all such outcomes are reported • Use the recommended international non-proprietary name (rINN) for drug names. Ensure that the dose, route, and frequency of administration of any drug you mention are correct • All accepted Articles should include a link to the full study protocol published on the authors’ institutional website (see Lancet 2009; 373: 992 and Lancet 2010; 375: 348) • We encourage researchers to enrol women and ethnic groups into clinical trials of all phases, and to plan to analyse data by sex and by race

All research papers (including systematic reviews/meta-analyses) submitted to any journal in The Lancet family must include a panel putting their research into context with previous work in the format outlined below (see Lancet 2014; 384: 2176–77, for the original rationale). This panel should not contain references. Editors will use this information at the first assessment stage and peer reviewers will be specifically asked to check the content and accuracy • The Discussion section should contain a full description and discussion of the context. Authors are also invited to either report their own, up-to-date systematic review or cite a recent systematic review of other trials, putting their trial into context of the review

# Abstract

# Introduction

# Methods

## Participants

```{r, include=FALSE}

# creating basic dataset

data<-read_delim("G:/My Drive/Data/ALFA+/ALFA_dataset_basic.csv", 
    delim = ",", escape_double = FALSE, trim_ws = TRUE)%>%
  mutate(sex=factor(sex),
         APOE_binary = factor(APOE_binary))


#adding scan dates for descriptives, horizontal 
date_mri_v1<-read_excel("G:/My Drive/Data/ALFA+/neuroimaging/bx_scandates_ALFA_PLUS_V1_20231120_20250210_135308.xlsx")%>%
  dplyr::select(subject_label, scandate)%>%
  mutate(subject_label = as.numeric(subject_label))%>%
  rename(subject = subject_label,
         scandate_v1 = scandate)

date_mri_v2<-read_excel("G:/My Drive/Data/ALFA+/neuroimaging/bx_scandates_ALFA_PLUS_V2_20230518_20250210_135351.xlsx")%>%
  dplyr::select(subject_label, scandate)%>%
  mutate(subject_label = as.numeric(subject_label))%>%
  rename(subject = subject_label,
         scandate_v2 = scandate)

date_mri_long<-full_join(date_mri_v1, date_mri_v2)%>%
  mutate(scandate_v1 = as.Date(scandate_v1, format = "%Y-%m-%d"),
         scandate_v2 = as.Date(scandate_v2, format = "%Y-%m-%d"),
         diff_mri = as.numeric(difftime(scandate_v2, scandate_v1, units = c("days")))/365.25)

#adding MRI sessions dates to the dataset
data<-left_join(data, date_mri_long)%>%
  mutate(DOB = as.Date (DOB, format = "%Y-%m-%d"),
         age_v1_mri = as.numeric(difftime(scandate_v1, DOB, units= c("days")))/365.25,
         age_v2_mri = as.numeric(difftime(scandate_v2, DOB, units= c("days")))/365.25)

data_biomarkers<-read_delim("G:/My Drive/Data/ALFA+/biomarkers/biomarkers_CSF_processed.csv", 
    delim = ",", escape_double = FALSE, trim_ws = TRUE)%>%
  filter(Visit == "V1")%>%
  dplyr::select(-Visit)

data<-left_join(data, data_biomarkers)%>%
  mutate(A = factor(A))

data_cognition_desc<-read_excel("G:/My Drive/Data/ALFA+/Cognition/PACCv1_to_v3(incomplete).xlsx")%>%
  dplyr::select(IdParticipante, Visit, Z_PACC)%>%
  rename(subject = IdParticipante)%>%
  mutate(subject = as.numeric(subject))%>%
  filter(Visit == 2)%>%
  dplyr::select(subject)

#special dataset for descriptives that includes only participants who have cognition and mri at visit 2
data_desc<-inner_join(data, data_cognition_desc)%>%
  drop_na(A)

pt_number <- data_desc%>%
  nrow()

pt_number_w<-data_desc%>%
  filter(sex==2)%>%
  nrow

## Plot aesthetics


call_aesthethics <- function(text_size){
  th <- theme(   panel.grid.major = element_blank(),
                 panel.grid.minor = element_blank(),
                 panel.border = element_blank(),
                 panel.background = element_blank(),
                 axis.line = element_line(linewidth = 0.5),
                 legend.position = 'right',
                 legend.text = element_text(size= text_size, family="Helvetica"),
                 text = element_text(size= text_size, family="Helvetica"),
                 strip.text.x = element_text(size = rel(0.90)),
                 strip.text.y = element_text(size = rel(0.90)),
                 axis.title.x = element_text(vjust=-0.3),
                 plot.title = element_text(hjust = 0.5, vjust = 0),
                 axis.ticks = element_line(linewidth = 0.4),
                 axis.text.x.bottom  = element_text(size = rel(0.90), margin = unit(c(t = 2.5, r = 0, b = 0, l = 0), "mm")),
                 axis.title.y = element_text(vjust = 1),
                 axis.text.y = element_text(size = rel(0.90), margin = unit(c(t = 0, r = 2.5, b = 0, l = 0), "mm")),
                 axis.ticks.length = unit(-1.2, "mm"),
                 axis.text.x.top = element_text(size = rel(0.90), margin = unit(c(t = 0, r = 0, b = 2.5, l = 0), "mm")))
  return(th)
}


th <- call_aesthethics(15)

```

Our sample includes `r pt_number` participants from the ALFA+ project, of which `r pt_number_w` are women (Clinicaltrials.gov Identifier: NCT01835717). This longitudinal cohort is composed of cognitively unimpaired individuals with heighteined AD risk [@molinuevo2016]. All participants had a Clinical Dementia Rating (CDR) scale = 0, and no history of cardiovascular disease. Women with history of cardiovascular related gestational disease, such as preeclampsia, were excluded from our sample.

## MRI acquisition

MRI scans were acquired on a 3.0 T scanner (GE Discovery MR750 W 3 T) using the same protocol for all participants, which included one T1- and three T2- weighted sequences. The 3D-T1w sequence was designed with an isotropic voxel size of1mm3 and a matrix size of256x256x160 (TR/TE/TI = 8.0/3.7/450 ms, NSA = 1, flip angle = 8°). Three 3D-T2w sequences, with a voxel size of1 mm× 1 mm× 3 mm, were also used: fluid attenuation inversion recovery (FLAIR: TR/TE/ TI = 11,000/90/2600 ms, flip angle = 160°), fast spin echo (FSE: TR/TE = 5000/85 ms, flip angle = 110°) and, gradient echo (GRE: TR/TE = 1300/23 ms, flip angle = 15°). All scans were visually assessed to verify their quality and to detect incidental findings by a trained neuroradiologist and have been reported elsewhere (Brugulat-Serrat et al. 2017). In this study, ten participants were excluded due to the presence of a meningioma, as well as 37 participants due to susceptibility, motion artefacts or segmentation problems, resulting in a total of 561 images available for subsequent analysis. The medial temporal lobe atrophy was assessed by Medial Temporal Atrophy scale (Scheltens et al. 1992).

## Hippocampal segmentation

Hippocampal subfield volumes were automatically calculated by FreeSurfer 7 using whole hippocampal segmentation provided by the standard ‘recon-all’ pipeline, which renders the most standard and widely-used volumetric estimation of hippocampal volumes. The subfields were delimited as following: CA1, CA3, CA4, GC-ML-DG, molecular layer, fimbria, parasubiculum, subiculum, presubiculum, HATA and tail.

![Freesurfer 7 segmentation pipeline.](/papers/ad_signatures_files/hipp subfield segmentation.png)


## Lumbar puncture

CSF was collected by lumbar puncture between 9 and 12 a.m. in polypropylene tubes. Samples were processed within 1 hour and centrifuged at 4°C for 10 minutes at 2000 g, stored in polypropylene tubes and frozen at -80°C. Core AD biomarkers (namely Ab42, Ab40, total Tau, and p tau) and other molecules of interest (such as YKL-40, neurogranin and Ab oligomers) were analyzed and determined in Prof. Kaj Blennow’s laboratory (Institute ofNeuroscience and Physiology, Department of Psychiatry and Neurochemistry, The Sahlgrenska Academy at the University of Gothenburg, Sweden).

## Cognitive measures

Cognitive composite z-scores were computed in four different cognitive domains: attention (WAIS-IV: Digit Span, WMS-IV: Symbol Span and TMT-A), episodic memory (Free and Cued Selective Reminding Test, Memory Binding Test, WMS-IV Logical Memory and NIH-toolbox Picture Sequence Memory test), executive functions (TMT-B, Five digits test, WAIS-IV Coding, WAIS-IV Matrix reasoning and NIH-toolbox Flanker Inhibition test), language (Semantic fluency, Boston Naming), and visual processing (WAIS-IV Visual Puzzles and RBANS Judgment of line orientation). In addition, the Preclinical Alzheimer Cognitive Composite (PACC) was used. This cognitive assessment tool was developed to detect subtle cognitive changes in individuals who may be in the pre-clinical stages of AD [@Donohue2014], and includes elements of the Memory Binding Test, the Coding subtest of WAIS-IV, and semantic fluency. Cognitive change for each composite was calculated by subtracting the follow-up visit score from the baseline cognitive score. Negative values indicate worse performance in the follow-up visit.

## Statistical analyses

### Linear regression models

Statistical analyses were carried using R v4.5.1. All linear regressions were adjusted for age, APOE-4 status, time and Aβ status when not part of the interaction. Linear regressions with cognitive scores as an outcome variable were also adjusted for years of education. Linear regressions with hippocampal subfield volumes as outcomes were adjusted for Total Intracranial Volume (TIV). p-values were adjusted using the False Discovery Rate (FDR) method.

# Results

## Descriptive results

```{r, include = F}

data_table<-data_desc%>%
  dplyr::select(age_v1, sex, kids_total, A, APOE_binary)%>%
  mutate(A=factor(A),
         APOE_binary=factor(APOE_binary))
 

desc_table<-tbl_summary(data_table,
            by = kids_total, 
            missing = "no",
            label= list(kids_total = "Number of childbirths",
                     A= "Aβ+",
                     APOE_binary = "APOE-E4 carrier",
                     age_v1 = "Age at first visit"))%>%
  add_n()%>%
  add_p%>%
  modify_header(label = "**Variable**") %>% # update the column header
  bold_labels()

desc_table
```

Table 1 shows demographics and characteristics of the ALFA+ cohort, for all participants who have completed Visit 1 and 2, grouped by parity. Participants with higher parity were significantly more likely to be older. No difference was seen between groups regarding Aβ status and APOE-ε4 carriership.

## Hippocampal volume (Women only)

```{r, include = F}
# summing some groups together: "subject"\   
  # "vol_CA1-body" CA1\   
  # "vol_CA1-head" CA1\   
  # "vol_CA3-body" CA3\   
  # "vol_CA3-head" CA3\   
  # "vol_CA4-body" CA4 "vol_CA4-head" CA4 "vol_GC-ML-DG-body" GC_ML_DG   
  # "vol_GC-ML-DG-head" GC_ML_DG "vol_HATA" HATA "vol_Hippocampal_tail" Tail   
  # "vol_Whole_hippocampal_body" Body "vol_Whole_hippocampal_head" Head   
  # "vol_Whole_hippocampus" whole "vol_fimbria" fimbria   
  # "vol_hippocampal-fissure" fissure "vol_molecular_layer_HP-body"   
  # molecular_layer "vol_molecular_layer_HP-head" molecular_layer   
  # "vol_parasubiculum" parasubiculum "vol_presubiculum-body" presubiculum   
  # "vol_presubiculum-head" presubiculum "vol_subiculum-body" subiculum   
  # "vol_subiculum-head" subiculum   

 hippo<-read_excel("G:/My Drive/Data/ALFA+/neuroimaging/bx_freesurfer7_hippoSfVolumes_ALFA_PLUS_V1_20231120_20250208_111212.xlsx")%>%
  group_by(subject, region) %>%
  summarize(bilateral_volume = sum(value), .groups = "drop")%>%
 mutate(region = case_when(region == "CA1-body"| region == "CA1-head" ~ "CA1",
            region == "CA3-body"| region == "CA3-head" ~ "CA3",
            region == "CA4-body"| region == "CA4-head" ~ "CA4",
            region == "GC-ML-DG-body" | region == "GC-ML-DG-head" ~ "GC_ML_DG",
            region == "molecular_layer_HP-body" | region == "molecular_layer_HP-head"~ "molecular_layer_HP",
            region == "presubiculum-body" | region == "presubiculum-head" ~ "presubiculum",
            region == "subiculum-body" | region == "subiculum-head" ~ "subiculum",
            .default = region))%>%
  group_by(region, subject)%>%
  summarize( bilateral_volume = sum(bilateral_volume), .groups = "drop")%>%
  pivot_wider(names_from = region, values_from = bilateral_volume, names_prefix = "vol_")%>%
  mutate(subject = as.numeric(subject),
         Visit = "V1")

hippo_data<-left_join(data, hippo)

hippo2<-read_excel("G:/My Drive/Data/ALFA+/neuroimaging/bx_freesurfer7_hippoSfVolumes_ALFA_PLUS_V2_20230518_20250208_112459.xlsx")%>%
  group_by(subject, region) %>%
  summarize(bilateral_volume = sum(value), .groups = "drop")%>%
  mutate(region = case_when(region == "CA1-body"| region == "CA1-head" ~ "CA1",
            region == "CA3-body"| region == "CA3-head" ~ "CA3",
            region == "CA4-body"| region == "CA4-head" ~ "CA4",
            region == "GC-ML-DG-body" | region == "GC-ML-DG-head" ~ "GC_ML_DG",
            region == "molecular_layer_HP-body" | region == "molecular_layer_HP-head"~ "molecular_layer_HP",
            region == "presubiculum-body" | region == "presubiculum-head" ~ "presubiculum",
            region == "subiculum-body" | region == "subiculum-head" ~ "subiculum",
            .default = region))%>%
  group_by(region, subject)%>%
  summarize( bilateral_volume = sum(bilateral_volume), .groups = "drop")%>%
  pivot_wider(names_from = region, values_from = bilateral_volume, names_prefix = "vol_")%>%
  mutate(subject = as.numeric(subject),
         Visit = "V2")

hippo_data2<-left_join(data, hippo2)
  

hippo_data_long<-bind_rows(hippo_data, hippo_data2)%>%
  mutate(Visit = factor(Visit))%>%
  mutate(age_mri = case_when(
    Visit == "V1" ~ age_v1_mri,
    Visit == "V2" ~ age_v2_mri
  ))%>%
  dplyr::select(-age_v1_mri, -age_v2_mri)%>%
  drop_na(scandate_v2)%>%
  mutate(diff_mri = ifelse(Visit == "V1", 0, diff_mri))

#fucntion to run 
run_volume_lmer_regressions <- function(data, predictors) {
  # Find all columns that start with "vol_"
  outcome_vars <- grep("^vol_", names(data), value = TRUE)

  # Create a formula string from predictors
  predictor_formula <- paste(predictors, collapse = " + ")

  # Run regressions and store summary results
  summaries <- lapply(outcome_vars, function(outcome) {
    formula <- as.formula(paste0("`", outcome, "` ~ ", predictor_formula))
    model <- lmer(formula, data = data)
    summary(model)
  })

  # Name each summary by its outcome variable
  names(summaries) <- outcome_vars

  return(summaries)
}
```


```{r, include = F}
##whole hippocampus, simple

mod_whole_simple<-lmer(vol_Whole_hippocampus ~ kids_total*diff_mri + age_v1 +APOE_binary + A + scale(TIV) + (1|subject), data = hippo_data_long[hippo_data_long$sex==2,])
summary(mod_whole_simple)

mod_whole_int<-lmer(vol_Whole_hippocampus ~ kids_total*diff_mri*A + age_v1 +APOE_binary + scale(TIV) + (1|subject), data = hippo_data_long[hippo_data_long$sex==2,])
summary(mod_whole_int)

plot_model(mod_whole_int, type= "int")


```
The two-way interaction between parity and time did not reveal any significant main effect of parity. However, when introducing a 3-way interaction with AB status, a significant parity and AB status interaction was found (β = `r tidy(mod_whole_int)$estimate[9]`, p = `r tidy(mod_whole_int)$p.value[9]`), such that Aβ- women showed a positive relationship between parity and hippocampal volume, whilst Aβ- women showed the opposite (Figure X). Stratified analyses show 

```{r, echo=F, warning=F}

preds_hip_int <- ggpredict(mod_whole_int, terms = c("diff_mri", "kids_total", "A"))

preds_hip_int_A0<-as.data.frame(preds_hip_int)%>%
  rename(kids_total_factor = group,
         A=facet)%>%
  filter(A==0)%>%
  mutate(A = ifelse(A==0, "Aβ-", "Aβ-"),
         kids_total_factor = ifelse(kids_total_factor == 4, "4+", as.character(kids_total_factor)))


preds_hip_int_A1<-as.data.frame(preds_hip_int)%>%
  rename(kids_total_factor = group,
         A=facet)%>%
  filter(A==1)%>%
  mutate(A = ifelse(A==1, "Aβ+", "Aβ+"),
         kids_total_factor = ifelse(kids_total_factor == 4, "4+", as.character(kids_total_factor)))


hippo_data_long %>%
  filter(sex == 2, !is.na(A)) %>%
  mutate(kids_total_factor = ifelse(kids_total == 4, "4+", as.character(kids_total)),
         A = factor(A, levels = c("0", "1"), labels = c("Aβ-", "Aβ+"))) %>%
  ggplot(aes(x = diff_mri, y = vol_Whole_hippocampus, color = kids_total_factor)) +
  geom_point(alpha = 0.4, size=2) +
  geom_line(data =preds_hip_int_A0, aes(x=x, 
                                y=predicted, 
                                group=kids_total_factor), size=1.3) +
  geom_line(data =preds_hip_int_A1, aes(x=x, 
                                y=predicted, 
                                group=kids_total_factor), size=1.3) +
  geom_ribbon(data =preds_hip_int_A0, aes(x=x,  
                                  ymin= conf.low, 
                                  ymax = conf.high, 
                                  group=kids_total_factor), inherit.aes = F, alpha=.07)+
  geom_ribbon(data =preds_hip_int_A1, aes(x=x,  
                                  ymin= conf.low, 
                                  ymax = conf.high, 
                                  group=kids_total_factor), inherit.aes = F, alpha=.07)+
  facet_wrap(~A) +
  scale_color_manual(values = c("0" = "#8AD9B5", "1" = "#50B88E", "2" = "#047A56", "3" = "#0A5940", "4+" = "#0F3F2D")) +
  th +
  labs(x = "Time difference (years)", 
       y = "Whole hippocampus", 
       color = "Number of childbirths")


```



```{r, include = F}
##no interaction, women only

outcome_vars <- c(
  "vol_CA1", "vol_CA3", "vol_CA4", "vol_GC_ML_DG", "vol_HATA", 
  "vol_Hippocampal_tail", "vol_fimbria", "vol_molecular_layer_HP", 
  "vol_parasubiculum", "vol_presubiculum", "vol_subiculum"
)


model_names <- c(
  "CA1", "CA3", "CA4", "GC-ML-DG", "HATA", 
  "Tail", "Fimbria", "Molecular layer", 
  "Parasubiculum", "Presubiculum", "Subiculum"
)


hippo_data_long%>%
  filter(sex == 2 )%>%
  dplyr::select(-vol_Whole_hippocampal_body, -vol_Whole_hippocampal_head, -vol_Whole_hippocampus, -`vol_hippocampal-fissure`)%>%
run_volume_lmer_regressions( .,c( "kids_total*diff_mri", "A","age_v1", "APOE_binary", "scale(TIV)", "(1 | subject)"))


models_hip_w <- setNames(
  lapply(outcome_vars, function(outcome) {
    formula <- as.formula(
      paste(outcome, "~ kids_total +A + scale(TIV) + age_mri + APOE_binary + (1 | subject)")
    )
    lmer(formula, data = hippo_data_long[hippo_data_long$sex==2,])
  }),
  model_names
)


tidy_models_hip_w <- map_dfr(models_hip_w, ~ {
  broom.mixed::tidy(.x, terms = c("kids_total", "sex"))   # Add consistent term column
}, .id = "region")%>%
  filter(term == "A"| term == "kids_total")

fdr_hip_w<-tidy_models_hip_w%>%
  filter(term == "kids_total")%>%
  pull(p.value)%>%
  p.adjust(., method = "fdr")%>%
  format(., scientific = FALSE)%>%
  as.numeric()

#fimbria significant, fimbria trend


#interaction
hippo_data_long%>%
  filter(sex == 2 )%>%
  dplyr::select(-vol_Whole_hippocampal_body, -vol_Whole_hippocampal_head, -vol_Whole_hippocampus, -`vol_hippocampal-fissure`)%>%
run_volume_lmer_regressions( .,c( "kids_total*A*diff_mri", "age_v1", "APOE_binary", "scale(TIV)", "repro_span", "(1 | subject)"))

models_hip_w_int <- setNames(
  lapply(outcome_vars, function(outcome) {
    formula <- as.formula(
      paste(outcome, "~ kids_total*A + scale(TIV) + age_mri + APOE_binary + (1 | subject)")
    )
    lmer(formula, data = hippo_data_long[hippo_data_long$sex==2,])
  }),
  model_names
)


tidy_models_hip_w_int <- map_dfr(models_hip_w_int, ~ {
  broom.mixed::tidy(.x, terms = c("kids_total", "kids_total:A1", "A1"))   # Add consistent term column
}, .id = "region")%>%
  filter(term == "kids_total:A1")

fdr_hip_w_int<-tidy_models_hip_w_int%>%
  filter(term == "kids_total:A1")%>%
  pull(p.value)%>%
  p.adjust(., method = "fdr")%>%
  format(., scientific = FALSE)%>%
  as.numeric()

tidy_models_hip_w_int$estimate
```

Applying the two-way time and parity interaction model to each individual hippocampal subfield revealed no significant main effect of parity after applying FDR correction. However, the three way interaction including Aβ status showed a significant effect of the interaction between parity and Aβ on the parasubiculum volume (β = `r tidy_models_hip_w_int$estimate[9]`, adj.p = `r fdr_hip_w_int[9]`), and a near significant effect on the CA4 (β = `r tidy_models_hip_w_int$estimate[3]`, adj.p = `r fdr_hip_w_int[3]`), dentate gyrus (β = `r tidy_models_hip_w_int$estimate[4]`, adj.p = `r fdr_hip_w_int[4]`), presubiculum (β = `r tidy_models_hip_w_int$estimate[10]`, adj.p = `r fdr_hip_w_int[10]`) and subiculum (β = `r tidy_models_hip_w_int$estimate[11]`, adj.p = `r fdr_hip_w_int[11]`). The direction of the effect followed the same as for the whole hippocampus, where Aβ- women showed a positive relationship between parity and hippocampal volume, whilst Aβ- women showed the opposite (Figure X)

```{r, echo=F, warning=F}
data_forest_plot<-hippo_data_long%>%
  filter(sex == 2 )

models<-list(
  CA1 = lmer(vol_CA1 ~ kids_total*A + scale(TIV) + age_mri + APOE_binary + (1 | subject),data = data_forest_plot),
  CA3 = lmer(vol_CA3 ~ kids_total*A + scale(TIV) + age_mri + APOE_binary + (1 | subject),data = data_forest_plot),
  `CA4` = lmer(vol_CA4 ~ kids_total*A + scale(TIV) + age_mri + APOE_binary + (1 | subject),data = data_forest_plot),
  `GC-ML-DG` = lmer(vol_GC_ML_DG ~ kids_total*A + scale(TIV) + age_mri + APOE_binary + (1 | subject),data = data_forest_plot),
  HATA = lmer(vol_HATA ~ kids_total*A + scale(TIV) + age_mri + APOE_binary + (1 | subject),data = data_forest_plot),
  Tail = lmer(vol_Hippocampal_tail ~ kids_total*A + scale(TIV) + age_mri + APOE_binary + (1 | subject),data = data_forest_plot),
  Fimbria = lmer(vol_fimbria ~ kids_total*A + scale(TIV) + age_mri + APOE_binary + (1 | subject),data = data_forest_plot),
  `Molecular layer` = lmer(vol_molecular_layer_HP ~ kids_total*A + scale(TIV) + age_mri + APOE_binary + (1 | subject),data = data_forest_plot),
 `Parasubiculum` = lmer(vol_parasubiculum ~ kids_total*A + scale(TIV) + age_mri + APOE_binary + (1 | subject),data = data_forest_plot),
  `Presubiculum` = lmer(vol_presubiculum ~ kids_total*A + scale(TIV) + age_mri + APOE_binary + (1 | subject),data = data_forest_plot),
  `Subiculum` = lmer(vol_subiculum ~ kids_total*A + scale(TIV) + age_mri + APOE_binary + (1 | subject),data = data_forest_plot)
)

# Extract coefficients and CIs
#install.packages("broom.mixed")

pred_hippo_all <- map_dfr(models, ~ {
  broom.mixed::tidy(.x, terms = c("kids_total", "A1"))   # Add consistent term column
}, .id = "region")%>%
  filter(term %in% c("kids_total", "A1", "kids_total:A1"))%>%
  dplyr::select(region, term, estimate, std.error)%>%
  pivot_wider(names_from = term, values_from = c(estimate, std.error))%>%
  mutate(plot_estimate_kids_A0 = estimate_kids_total,
         plot_estimate_kids_A1 = estimate_kids_total + `estimate_kids_total:A1`,
         plot_conf.low_kids_A0 = estimate_kids_total - 1.96 * std.error_kids_total,
         plot_conf.high_kids_A0 = estimate_kids_total + 1.96 * std.error_kids_total,
         plot_conf.low_kids_A1 = (estimate_kids_total + `estimate_kids_total:A1` - 1.96 * `std.error_kids_total:A1`),
         plot_conf.high_kids_A1 = (estimate_kids_total + `estimate_kids_total:A1` + 1.96 * `std.error_kids_total:A1`))%>%
  dplyr::select(-estimate_kids_total, -estimate_A1,-`estimate_kids_total:A1` ,-`std.error_kids_total`, -std.error_A1 ,         -`std.error_kids_total:A1`)%>%
  pivot_longer(
    cols = starts_with("plot_"),  # Keep 'term' as-is
    names_to = c(".value", "A"),  # .value creates columns like estimate, conf.low, etc.
    names_pattern = "plot_(.*)_kids_A(\\d+)"
  )%>%
  mutate(colour_group = case_when(region == "CA4" ~ "trend",
                                  region == "GC-ML-DG" ~ "trend",
                                  region == "Presubiculum" ~ "trend",
                                  region == "Subiculum" ~ "trend",
                                  region == "Parasubiculum" ~ "significant",
                                  .default = "normal"))

pred_hippo_all %>%
  mutate(A = factor(A, levels = c("1", "0"), labels = c("Positive", "Negative"))) %>%
  ggplot(aes(x = estimate, y = region, group = A, shape = A, color = colour_group)) +
  geom_pointrange(aes(xmin = conf.low, xmax = conf.high), 
                  position = position_dodge(width = 0.8),
                  size = 0.6) +
  labs(x = "Estimated effect of parity", 
       y = "Hippocampal subfield", 
       shape = "Aβ status",
       color = "Significance level (FDR corrected)") +
  th +
  geom_vline(xintercept = 0, linetype = "dotted", colour = "grey3") +
  scale_shape_manual(values = c("Negative" = 15, "Positive" = 16))+
  scale_color_manual(values = c("trend" = "grey3", "significant" = "red", "normal" = "grey48"))+
  guides(colour = "none")
  
```


## SEM
```{r, eval=FALSE}

diff_mri_df<-date_mri_long%>%
  dplyr::select(subject, diff_mri)

hippo_V1<-hippo%>%
  rename_with(~ paste(., "V1", sep = "_"))%>%
  rename(subject = subject_V1)

hippo_sem<-hippo2%>%
  rename_with(~ paste(., "V2", sep = "_"))%>%
  rename(subject = subject_V2)%>%
  right_join(., hippo_V1, join_by(subject))%>%
  dplyr::select(-Visit_V1, -Visit_V2)%>%
  left_join(., diff_mri_df)%>%
  mutate(rate_CA1 = (vol_CA1_V2-vol_CA1_V1)/diff_mri,
         rate_CA3 = (vol_CA3_V2-vol_CA3_V1)/diff_mri,
         rate_CA4 = (vol_CA4_V2-vol_CA4_V1)/diff_mri,
         rate_GC_ML_DG = (vol_GC_ML_DG_V2-vol_GC_ML_DG_V1)/diff_mri,
         rate_HATA = (vol_HATA_V2-vol_HATA_V1)/diff_mri,
         rate_Hippocampal_tail = (vol_Hippocampal_tail_V2-vol_Hippocampal_tail_V1)/diff_mri,
         rate_fimbria = (vol_fimbria_V2-vol_fimbria_V1)/diff_mri,
         rate_molecular_layer_HP = (vol_molecular_layer_HP_V2-vol_molecular_layer_HP_V1)/diff_mri,
         rate_parasubiculum = (vol_parasubiculum_V2-vol_parasubiculum_V1)/diff_mri,
         rate_presubiculum = (vol_presubiculum_V2-vol_presubiculum_V1)/diff_mri,
         rate_subiculum = (vol_subiculum_V2-vol_subiculum_V1)/diff_mri)
  

# need to do SEM with GFAP, sTREM, neurogranin, IL6



biomarkers_long<-read_delim("G:/My Drive/Data/ALFA+/biomarkers/biomarkers_CSF_processed.csv", 
    delim = ",", escape_double = FALSE, trim_ws = TRUE)%>%
  mutate(subject=as.numeric(subject))%>%
  rename(CSF_A = A,
         CSF_AT = AT)%>%
  drop_na(Visit)%>%
  dplyr::select(-collection_dt)%>%
  pivot_wider(names_from = Visit, values_from = c(starts_with("CSF_")))%>%
  left_join(., time_diff)

data_naked<-read_delim("G:/My Drive/Data/ALFA+/ALFA_dataset_basic.csv", 
    delim = ",", escape_double = FALSE, trim_ws = TRUE)%>%
  mutate(sex=factor(sex))

data_sem<-full_join(biomarkers_long, hippo_sem, join_by(subject))%>%
  right_join(., data_naked)




#this removes v2 of some people who have neuroimaging but not biomarkers. might have to revise it

library(lavaan)
library(semPlot)
library(corrplot)


# Standardize all continuous variables before SEM
#continuous_vars <- c("CSF_GFAP_V1", "CSF_GFAP_V2", "repro_span" , "Age_at_first_birth",
                     "CSF_Neurogranin_V1", "CSF_Neurogranin_V2", "CSF_sTREM2_V1", "CSF_sTREM2_V2",
                     "vol_Whole_hippocampus_V1", "vol_Whole_hippocampus_V2")

# Standardize (mean=0, sd=1)
#data_sem[continuous_vars] <- scale(data_sem[continuous_vars])

m1<-' i =~ 1*vol_Whole_hippocampus_V1+ 1*vol_Whole_hippocampus_V2
s =~ 0*vol_Whole_hippocampus_V1 + 1*vol_Whole_hippocampus_V2'

fit_m1<-growth(m1, data = data_sem)
```




## Cognitive trajectory

```{r, include=F}
cognition<-read_excel("G:/My Drive/Data/ALFA+/Cognition/PACCv1_to_v3(incomplete).xlsx")%>%
  dplyr::select(IdParticipante, Visit, Z_PACC, Z_FCSRTI_RT, Z_aWMS_DR_RS, Z_Wclave_totalscr, Z_FS_totalcnswr, FechaResultado)%>%
  rename(subject = IdParticipante)%>%
  mutate(subject = as.numeric(subject))

time_diff<-read_excel("G:/My Drive/Data/ALFA+/Cognition/PACCv1_to_v3(incomplete).xlsx")%>%
  dplyr::select(IdParticipante, Visit,FechaResultado)%>%
  rename(subject = IdParticipante)%>%
  mutate(subject = as.numeric(subject))%>%
  filter(Visit != 3)%>%
  pivot_wider(names_from = Visit, values_from = FechaResultado, names_prefix = c("Fecha_Resultado"))%>%
  mutate(time_diff = as.numeric(difftime(Fecha_Resultado2, Fecha_Resultado1, units= c("days"))))%>%
  dplyr::select(subject, time_diff)

data_cog_long<- left_join(data, cognition)%>%
  mutate(age_cog = as.numeric(difftime(FechaResultado, DOB, units= c("days")))/365.25)%>%
  group_by(subject)%>%
  filter(Visit != 3) %>%
  filter(n()>=2)%>%
  relocate(Visit, .after=sex)%>%
  ungroup()%>%
  left_join(., time_diff)%>%
  mutate(time_diff = ifelse(Visit == 1, 0, time_diff))

fit_cog_simple_PACC<-lmer(Z_PACC ~ kids_total*time_diff +age_cog + APOE_binary + education + A +(1 | subject), data_cog_long[data_cog_long$sex==2,])
summary(fit_cog_simple_PACC)

fit_cog_PACC<-lmer(Z_PACC ~ kids_total*A*time_diff +age_cog + APOE_binary + education +(1 | subject), data_cog_long[data_cog_long$sex==2,])
summary(fit_cog_PACC)

```
The two-way parity and time interaction did not produce any significan main effect on PACC score at visit 1 and 2. However, a three-way interaction between time, parity and A status was found (β = `r tidy(fit_cog_PACC)$estimate[11]`, p=`r tidy(fit_cog_PACC)$p.value[11]`). Results suggest that whilst parity and Aβ status did not seem to affect PACC score at time = 0, Aβ- women appeared to show a positive relationship between parity and PACC score as time went on, and Aβ+ women the opposite.

```{r, echo=F, warning=F}

preds_PACC <- ggpredict(fit_cog_PACC, terms = c("time_diff", "kids_total", "A"))

preds_PACC_A0<-as.data.frame(preds_PACC)%>%
  rename(kids_total_factor = group,
         A=facet)%>%
  filter(A==0)%>%
  filter(kids_total_factor!=3)%>%
  mutate(A = ifelse(A==0, "Aβ-", "Aβ-"),
         kids_total_factor = ifelse(kids_total_factor== 4, "3+", as.character(kids_total_factor)))


preds_PACC_A1<-as.data.frame(preds_PACC)%>%
  rename(kids_total_factor = group,
         A=facet)%>%
  filter(A==1)%>%
  filter(kids_total_factor!=3)%>%
  mutate(A = ifelse(A==1, "Aβ+", "Aβ+"),
         kids_total_factor = ifelse(kids_total_factor== 4, "3+", as.character(kids_total_factor)))

#by time diff with predicted values - preferred?
data_cog_long %>%
  filter(sex == 2, !is.na(A)) %>%
  mutate(kids_total_factor = ifelse(kids_total >= 3, "3+", as.character(kids_total)),
         A = factor(A, levels = c("0", "1"), labels = c("Aβ-", "Aβ+"))) %>%
  ggplot(aes(x = time_diff, y = Z_PACC, color = kids_total_factor)) +
  geom_point(alpha = 0.3, size=2) +
  geom_line(data =preds_PACC_A0, aes(x=x, 
                                y=predicted, 
                                group=kids_total_factor), size=1.3) +
  geom_line(data =preds_PACC_A1, aes(x=x, 
                                y=predicted, 
                                group=kids_total_factor), size=1.3) +
  geom_ribbon(data =preds_PACC_A0, aes(x=x,  
                                  ymin= conf.low, 
                                  ymax = conf.high, 
                                  group=kids_total_factor), inherit.aes = F, alpha=.07)+
  geom_ribbon(data =preds_PACC_A1, aes(x=x,  
                                  ymin= conf.low, 
                                  ymax = conf.high, 
                                  group=kids_total_factor), inherit.aes = F, alpha=.07)+
  facet_wrap(~A) +
  scale_color_manual(values = c("0" = "#8AD9B5", "1" = "#50B88E", "2" = "#047A56", "3+" = "#0A5940")) +
  th +
  labs(x = "Time difference (days)", 
       y = "PACC Z-score", 
       color = "Number of childbirths")
```


```{r, include=F}
###Composites

composites1<-read_excel("G:/My Drive/Data/ALFA+/Cognition/Visit 1 - Cognition Z Scores.xlsx")%>%
  dplyr::select(-Gender, -Age_V1S1, -Years_Edu, -V1S1_dt, -Z_PACC_Composite_1.2._v1 )%>%
  rename(subject = IdParticipante,
         Z_Attention_Composite = Z_Attention_Composite_v1,
         Z_Memory_Composite = Z_Memory_Composite_v1,
         Z_Executive_Composite = Z_Executive_Composite_v1,
         Z_Language_Composite = Z_Language_Composite_v1,
         Z_Visual_Composite = Z_Visual_Composite_v1)%>%
  mutate(Visit = "1")

composites2<-read_excel("G:/My Drive/Data/ALFA+/Cognition/Visit 2 - Cognition Z Scores.xlsx")%>%
  dplyr::select(-Gender, -Age_V1S1, -Years_Edu, -V1S1_dt, -V2S1_dt, -Z_PACC_Composite_1.2._V2 )%>%
  rename(subject = IdParticipante,
         Z_Attention_Composite = Z_Attention_Composite_V2,
         Z_Memory_Composite = Z_Memory_Composite_V2,
         Z_Executive_Composite = Z_Executive_Composite_V2,
         Z_Language_Composite = Z_Language_Composite_V2,
         Z_Visual_Composite = Z_Visual_Composite_V2)%>%
  mutate(Visit = "2")

composite_all<-full_join(composites1, composites2)%>%
  group_by(subject) %>%
  ungroup()%>%
  mutate(subject = as.numeric(subject))

data_cog_long_composites<-left_join(data_cog_long, composite_all)

#no interaction, women

outcome_vars_cog <- c(
  "Z_Attention_Composite", "Z_Memory_Composite", "Z_Executive_Composite", "Z_Language_Composite", "Z_Visual_Composite"
)


model_names_cog <- c(
  "Attention", "Memory", "Executive", "Language", "Visual"
)

models_cog <- setNames(
  lapply(outcome_vars_cog, function(outcome) {
    formula <- as.formula(
      paste(outcome, "~ kids_total*time_diff + A  + education + age_cog + APOE_binary + (1 | subject)")
    )
    lmer(formula, data = data_cog_long_composites[data_cog_long_composites$sex==2,])
  }),
  model_names_cog
)


tidy_models_cog <- map_dfr(models_cog, ~ {
  broom.mixed::tidy(.x, terms = c("kids_total", "A", "sex2"))   # Add consistent term column
}, .id = "composite")%>%
  filter(term == "A"| term == "kids_total"| term== "sex2" )

fdr_cog_sex<-tidy_models_cog%>%
  filter(term == "sex2")%>%
  pull(p.value)%>%
  p.adjust(., method = "fdr")%>%
  format(., scientific = FALSE)


# interaction

models_cog_int <- setNames(
  lapply(outcome_vars_cog, function(outcome) {
    formula <- as.formula(
      paste(outcome, "~ kids_total *time_diff*A + education + age_cog + APOE_binary + (1 | subject)")
    )
    lmer(formula, data = data_cog_long_composites[data_cog_long_composites$sex==2,])
  }),
  model_names_cog
)


tidy_models_cog_int <- map_dfr(models_cog_int, ~ {
  broom.mixed::tidy(.x, terms = c("kids_total", "A", "kids_total:A"))   # Add consistent term column
}, .id = "composite")%>%
  filter(term == "A"| term == "kids_total"| term == "kids_total:A" )

```

No significant main effect of parity was found on any of the cognitive composites used after FDR correction.

# Discussion

We aimed to investigate the impact of parity on hippocampal subfield volumes and relation to AD pathology in post-menopausal women at risk of AD and men who share similar age and AD risk. Our results suggest that...


Limitations:
- unequal number of men and women
- still early stages 
- uniformity of sample both ethnically and socially
- no more than 4 kids per women




# Miscellaneous

```{r, eval= FALSE}

#hipp subfields

hippo_data_long%>%
  dplyr::select(-vol_Whole_hippocampal_body, -vol_Whole_hippocampal_head, -vol_Whole_hippocampus, -`vol_hippocampal-fissure`)%>%
run_volume_lmer_regressions( .,c( "kids_total" ,"A","sex", "age_mri", "APOE_binary", "scale(TIV)", "(1 | subject)"))


models_hip <- setNames(
  lapply(outcome_vars, function(outcome) {
    formula <- as.formula(
      paste(outcome, "~ kids_total + sex +A + scale(TIV) + age_mri + APOE_binary + (1 | subject)")
    )
    lmer(formula, data = hippo_data_long)
  }),
  model_names
)

tidy_models_hip <- map_dfr(models_hip, ~ {
  broom.mixed::tidy(.x, terms = c("kids_total", "sex2"))   # Add consistent term column
}, .id = "region")%>%
  filter(term == "sex2"| term == "kids_total")

fdr_hip_sex<-tidy_models_hip%>%
  filter(term == "sex2")%>%
  pull(p.value)%>%
  p.adjust(method = "fdr")%>%
  format(., scientific = FALSE)%>%
  as.numeric()

fdr_hip_parity<-tidy_models_hip%>%
  filter(term == "kids_total")%>%
  pull(p.value)%>%
  p.adjust(method = "fdr")%>%
  format(., scientific = FALSE)%>%
  as.numeric()


```

## Jack's signature

```{r, eval = F}
jack<-read_excel("G:/My Drive/Data/ALFA+/Jack signature ALFA+/bx_signature_jack_ALFA_PLUS_V1_20231120_20250527_142751.xlsx")%>%
  filter(weighted == "TRUE")%>%
  dplyr::select(-ID, -signature, -weighted)%>%
  pivot_wider(names_from = measurement, values_from = value, names_prefix = "jack_")%>%
  mutate(subject = as.numeric(subject),
         Visit = "V1")

jack2<-read_excel("G:/My Drive/Data/ALFA+/Jack signature ALFA+/bx_signature_jack_ALFA_PLUS_V2_20230518_20250210_114442.xlsx")%>%
  filter(weighted == "TRUE")%>%
  dplyr::select(-ID, -signature, -weighted)%>%
  pivot_wider(names_from = measurement, values_from = value, names_prefix = "jack_")%>%
  mutate(subject = as.numeric(subject),
         Visit = "V2")

jack_data<-bind_rows(jack, jack2)

jack_data_long<-left_join(hippo_data_long, jack_data)
  
#all pts
fit_jack_cort <- lmer(jack_ThickAvg ~ kids_total*A + sex +Visit +age_mri + APOE_binary + scale(TIV) + (1 | subject) , jack_data_long) 
summary(fit_jack_cort)

fit_jack_grey <- lmer(jack_GrayVol ~ kids_total*A + sex +Visit +age_mri + APOE_binary + scale(TIV) + (1 | subject) , jack_data_long) 
summary(fit_jack_grey)

#women
fit_jack_cort_w <- lmer(jack_ThickAvg ~ kids_total*A  +Visit +age_mri + APOE_binary + scale(TIV) + (1 | subject) , jack_data_long[jack_data_long$sex==2,]) 
summary(fit_jack_cort_w)

fit_jack_grey_w <- lmer(jack_GrayVol ~ kids_total*A  +Visit +age_mri + APOE_binary + scale(TIV) + (1 | subject) , jack_data_long[jack_data_long$sex==2,]) 
summary(fit_jack_grey_w)
```


## Parasubiculum volume at visit 1 and 2 in women, grouped by number of childbirths and Aβ status.

```{r, eval=F}
mod_plot<-lmer(vol_parasubiculum ~ kids_total*A + Visit + as.factor(APOE_binary) + scale(TIV) +(1| subject), data=hippo_data_long[hippo_data_long$sex==2,] )
summary(mod_plot)

preds <- ggpredict(mod_plot, terms = c("kids_total", "A", "Visit"))
```


```{r, eval=F}
hippo_data_long %>%
  filter(sex == 2) %>%
  drop_na(A) %>%
  mutate(kids_total_factor=ifelse(kids_total>=3, "3+", kids_total))%>%
  mutate(A = factor(A, labels = c("Aβ-", "Aβ+"))) %>%
  ggplot(aes(x = Visit, y = vol_parasubiculum, color = kids_total_factor, fill=kids_total_factor)) +
  geom_point(alpha = 0.6, 
             position = position_dodge(width = 1)) +
  geom_boxplot(position = position_dodge(width = 0.9), 
               alpha=.5)+
  facet_wrap(~A) +
  th +
  labs(x = "Visit", 
       y = "Parasubiculum volume", 
       color = "Number of childbirths", 
       fill= "Number of childbirths")+
  scale_color_manual(values = c("0" = "lightblue", "1" = "steelblue", "2" = "darkblue", "3+" = "navy", "4" = "midnightblue")) +
  scale_fill_manual(values = c("0" = "lightblue", "1" = "steelblue", "2" = "darkblue", "3+" = "navy", "4" = "midnightblue"))+
  scale_x_discrete(expand = expansion(mult = c(0.8, 0.8)))

ggsave("G:/My Drive/ADPD 2026/plot_parasubiculum_interaction.png", width = 9, height = 5)
```


